{"version":3,"sources":["webpack://PlainModal/webpack/bootstrap","webpack://PlainModal/./node_modules/anim-event/anim-event.esm.js","webpack://PlainModal/./node_modules/cssprefix/cssprefix.esm.js","webpack://PlainModal/./node_modules/m-class-list/m-class-list.esm.js","webpack://PlainModal/./node_modules/plain-draggable/plain-draggable-limit.esm.js","webpack://PlainModal/./node_modules/plain-overlay/plain-overlay-limit-sync-debug.esm.js","webpack://PlainModal/./node_modules/pointer-event/pointer-event.esm.js","webpack://PlainModal/./node_modules/timed-transition/timed-transition.esm.js","webpack://PlainModal/./src/default.scss","webpack://PlainModal/./src/plain-modal.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,aAAa,OAAO;AACpB,cAAc,MAAM;AACpB,cAAc,SAAS;AACvB;;AAEA,WAAW,OAAO;AAClB;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,E;;;;;;;;;;;;AC5GxB;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;;AAGD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,YAAY;AACZ,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ,CAAC;;;AAGD;AACA;AACA,YAAY;AACZ,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,iBAAiB;AACjB,GAAG;;AAEH,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA;;AAEe,wEAAS,E;;;;;;;;;;;;ACnLxB;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEe,yEAAU,E;;;;;;;;;;;;AC9GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyC;AACP;AACC;AACG;AACtC,oDAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;;AAGD,WAAW,4BAA4B;AACvC,aAAa;AACb,sBAAsB;AACtB,uBAAuB,qDAAY;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,iCAAiC;AAC/C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kEAAkE,qFAAqF,QAAQ;AAC/J;;AAEA,4BAA4B,+BAA+B;AAC3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA,mBAAmB;AACnB,gDAAgD;AAChD,sBAAsB,oCAAoC;AAC1D,oBAAoB;AACpB;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,iDAAS;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,iDAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,iDAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,2BAA2B;AACvC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,2BAA2B;AACvC,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC,4DAA4D;AAC5D;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mCAAmC,+EAA+E;;AAElH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;AAC9D;;AAEA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA,qBAAqB,2DAA2D;AAChF;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,YAAY,kBAAkB;AAC9B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA,OAAO;AACP;AACA;;AAEA,wCAAwC,iBAAiB;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,4BAA4B,iDAAS;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,4DAAU;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAU;AACtB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAU;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,cAAc;AACrD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,aAAa;AACpD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,qBAAqB;AAC5D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,gBAAgB;AACvD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,gBAAgB;AACvD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,gBAAgB;AACvD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,gBAAgB;AACvD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,qBAAqB;AAC5D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,qBAAqB;AAC5D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,mBAAmB;AAC1D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,4DAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,4DAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,4DAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,iDAAS;AACzC,uBAAuB,iDAAS;AAChC;AACA,4BAA4B,iDAAS;AACrC;AACA;;AAEA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,+BAA+B;AAC/B,uBAAuB,kDAAS;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEe,6EAAc,E;;;;;;;;;;;;ACxiC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;AACC;AACG;AACS;AAC/C,2FAA2F,0CAA0C,wBAAwB,iCAAiC,cAAc,kBAAkB,OAAO,MAAM,gBAAgB,uCAAuC,YAAY,aAAa,oCAAoC,iCAAiC,+BAA+B,4BAA4B,kCAAkC,+BAA+B,6BAA6B,0BAA0B,0CAA0C,uCAAuC,qCAAqC,kCAAkC,UAAU,gCAAgC,UAAU,iCAAiC,iCAAiC,8BAA8B,4BAA4B,yBAAyB,gCAAgC,aAAa,+BAA+B,eAAe,YAAY,WAAW,iBAAiB,cAAc,YAAY,aAAa,mBAAmB,WAAW,YAAY,qBAAqB,aAAa,+BAA+B,uBAAuB,2BAA2B,mBAAmB,kDAAkD,YAAY,aAAa;AACzzC,oDAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB;AACnB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;;AAGD;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA,WAAW,4BAA4B;AACvC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iCAAiC;;AAEjC;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,YAAY;AACzB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG,GAAG,+BAA+B;;AAErC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0QAA0Q,+BAA+B;AACzS,KAAK;AACL;AACA,UAAU;AACV;AACA,uCAAuC;;AAEvC;AACA,2FAA2F;;AAE3F;AACA;AACA;AACA;AACA,KAAK,gBAAgB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH,oEAAoE;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK,gBAAgB;;AAErB;AACA;AACA;AACA;AACA,KAAK,gBAAgB;AACrB,GAAG;AACH;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA,iCAAiC;AACjC;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA,WAAW,KAAK;AAChB,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,KAAK,gBAAgB;AACrB;AACA;AACA;AACA;AACA,oCAAoC;AACpC,OAAO,gBAAgB;AACvB;AACA,gEAAgE;AAChE;AACA;AACA,qEAAqE;AACrE;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,uBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;;;AAGP;AACA,YAAY;AACZ,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,IAAI,mDAAmD,GAAG,qDAAqD,GAAG,2DAA2D,GAAG,yDAAyD;AACzO,eAAe,iDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,4DAAU;AAC7F;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,2FAA2F;AAC3F;AACA;AACA;AACA,mBAAmB,iDAAS;AAC5B,oBAAoB,iDAAS;AAC7B;AACA;AACA,mBAAmB;AACnB;AACA,8FAA8F,4DAAU;AACxG,OAAO;AACP,gBAAgB,iCAAiC;AACjD,OAAO,MAAM,6CAA6C,EAAE;;AAE5D;AACA,uBAAuB;AACvB;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA,0FAA0F;AAC1F,kCAAkC;AAClC,EAAE,4DAAU;;AAEZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;AACA;AACA,6GAA6G;AAC7G;AACA;AACA,sDAAsD;AACtD,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,0EAA0E;AAC1E;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uDAAuD;AACvD;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,kFAAkF;AAClF,oCAAoC;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA,8BAA8B,4DAAU;AACxC,gDAAgD;AAChD;AACA,2CAA2C;;AAE3C,iDAAiD;AACjD;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA,kFAAkF;AAClF,oCAAoC;AACpC,kCAAkC;AAClC;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,iDAAS;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA,gDAAgD;AAChD,OAAO;AACP;AACA,gDAAgD;AAChD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,OAAO;AACP;AACA,0BAA0B;AAC1B,8BAA8B;AAC9B;AACA;;AAEA,wCAAwC,iBAAiB;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,8BAA8B,4DAAU;AACxC;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,wDAAe;AAC1C;AACA,kCAAkC,4DAAU;AAC5C;AACA;AACA,OAAO;AACP;AACA,kCAAkC,4DAAU;AAC5C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,2DAA2D;AAC3D,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,mGAAmG;AACnG;AACA,iCAAiC;AACjC;AACA;AACA;AACA,gEAAgE;AAChE,KAAK;;AAEL;AACA;AACA,4CAA4C,kDAAS;AACrD;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,eAAe,aAAa;AAC5B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,aAAa;AAC9B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,iBAAiB,aAAa;AAC9B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,cAAc;AACrD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,kBAAkB;AACzD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,cAAc;AACrD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,gBAAgB;AACvD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,gBAAgB;AACvD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,sBAAsB;AAC7D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,sBAAsB;AAC7D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,oBAAoB;AAC3D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,E;;;;;;;;;;;;ACnzC3B;AAAA;AAAA;AACA;AACA;;AAEA,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmC;;AAEnC,6BAA6B;;;AAG7B;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,GAAG;AACH,CAAC,iBAAiB;;AAElB;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,aAAa;AAC1B;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,wFAAwF,iCAAiC;AACzH,yFAAyF,iCAAiC;AAC1H,oEAAoE,iCAAiC;AACrG;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA,2BAA2B,kDAAS;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,yEAAyE,iCAAiC;AAC1G,yEAAyE,iCAAiC;AAC1G;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE,UAAU;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,iCAAiC;AACxG,wEAAwE,iCAAiC;AACzG;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;;AAExC;AACA;AACA;AACA,kEAAkE,EAAE,OAAO;AAC3E;AACA;AACA;AACA;AACA;AACA,2EAA2E,iCAAiC;AAC5G;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAEc,2EAAY,E;;;;;;;;;;;;AClX3B;AAAA;AAAA;AACA;AACA;;AAEA,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;;AAEA,WAAW,4BAA4B;AACvC;;AAEA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,iDAAS;AACjE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,wCAAwC,iBAAiB;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,gBAAgB;AACjC;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,gBAAgB;AACjC;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,uBAAuB;AAC9D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,kBAAkB;AACzD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,kBAAkB;AACzD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,eAAe;AACtD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,kBAAkB;AACzD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,mBAAmB;AAC1D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAEc,8EAAe,E;;;;;;;;;;;ACjgB9B,kDAAkD,0CAA0C,wBAAwB,iCAAiC,yBAAyB,6BAA6B,YAAY,gCAAgC,aAAa,gCAAgC,WAAW,YAAY,kBAAkB,OAAO,MAAM,sCAAsC,4BAA4B,0BAA0B,kCAAkC,UAAU,wDAAwD,UAAU,yDAAyD,yBAAyB,E;;;;;;;;;;;;ACAtnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;AACI;AACG;AACH;AACtC;AAC6C;AAC7C;AACA,oDAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,aAAa;AAC3B,cAAc,eAAe;AAC7B,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,eAAe,wCAAwC;AACvD;;AAEA,WAAW,4BAA4B;AACvC,aAAa;;;AAGb;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E,uCAAuC;AACvC,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iDAAS;AAChC;AACA;AACA;AACA;AACA,8BAA8B,4DAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E,iCAAiC;AACjC;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iDAAS;AAChC;AACA;AACA;AACA;AACA,8BAA8B,4DAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;;AAEA;AACA,oDAAoD;AACpD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uDAAuD;AACvD;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,kFAAkF;AAClF;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,IAAI,4DAAU;AACd;AACA,8CAA8C,4DAAU;AACxD,6CAA6C,4DAAU;AACvD;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,mFAAmF;AACnF;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAc;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,uBAAuB;AACvB;;AAEA,wCAAwC,iBAAiB;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAQ;AAClC;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,OAAO;AACP;;AAEA,IAAI,4DAAU;AACd;AACA,6BAA6B,qDAAY;AACzC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,IAAI,4DAAU,kDAAkD;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,eAAe,WAAW;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,WAAW;AAC5B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,WAAW;AAC5B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,qBAAqB;AAC5D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,kBAAkB;AACzD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,qBAAqB;AAC5D;;AAEA;;AAEA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,oBAAoB;AAC3D;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,oBAAoB;AAC3D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,qBAAqB;AAC5D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,gBAAgB;AACvD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,iBAAiB;AACxD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,sBAAsB;AAC7D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,uBAAuB;AAC9D;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAY;AAClC;;AAEe,yEAAU,E","file":"plain-modal.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/plain-modal.js\");\n","/* ================================================\n        DON'T MANUALLY EDIT THIS FILE\n================================================ */\n\n/*\n * AnimEvent\n * https://github.com/anseki/anim-event\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nvar MSPF = 1000 / 60,\n    // ms/frame (FPS: 60)\nKEEP_LOOP = 500,\n\n\n/**\n * @typedef {Object} task\n * @property {Event} event\n * @property {function} listener\n */\n\n/** @type {task[]} */\ntasks = [];\n\nvar requestAnim = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n  return setTimeout(callback, MSPF);\n},\n    cancelAnim = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || function (requestID) {\n  return clearTimeout(requestID);\n};\n\nvar lastFrameTime = Date.now(),\n    requestID = void 0;\n\nfunction step() {\n  var called = void 0,\n      next = void 0;\n\n  if (requestID) {\n    cancelAnim.call(window, requestID);\n    requestID = null;\n  }\n\n  tasks.forEach(function (task) {\n    var event = void 0;\n    if (event = task.event) {\n      task.event = null; // Clear it before `task.listener()` because that might fire another event.\n      task.listener(event);\n      called = true;\n    }\n  });\n\n  if (called) {\n    lastFrameTime = Date.now();\n    next = true;\n  } else if (Date.now() - lastFrameTime < KEEP_LOOP) {\n    // Go on for a while\n    next = true;\n  }\n  if (next) {\n    requestID = requestAnim.call(window, step);\n  }\n}\n\nfunction indexOfTasks(listener) {\n  var index = -1;\n  tasks.some(function (task, i) {\n    if (task.listener === listener) {\n      index = i;\n      return true;\n    }\n    return false;\n  });\n  return index;\n}\n\nvar AnimEvent = {\n  /**\n   * @param {function} listener - An event listener.\n   * @returns {(function|null)} A wrapped event listener.\n   */\n  add: function add(listener) {\n    var task = void 0;\n    if (indexOfTasks(listener) === -1) {\n      tasks.push(task = { listener: listener });\n      return function (event) {\n        task.event = event;\n        if (!requestID) {\n          step();\n        }\n      };\n    }\n    return null;\n  },\n  remove: function remove(listener) {\n    var iRemove = void 0;\n    if ((iRemove = indexOfTasks(listener)) > -1) {\n      tasks.splice(iRemove, 1);\n      if (!tasks.length && requestID) {\n        cancelAnim.call(window, requestID);\n        requestID = null;\n      }\n    }\n  }\n};\n\nexport default AnimEvent;","/* ================================================\n        DON'T MANUALLY EDIT THIS FILE\n================================================ */\n\n/*\n * CSSPrefix\n * https://github.com/anseki/cssprefix\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nfunction ucf(text) {\n  return text.substr(0, 1).toUpperCase() + text.substr(1);\n}\n\nvar PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n    NAME_PREFIXES = PREFIXES.reduce(function (prefixes, prefix) {\n  prefixes.push(prefix);\n  prefixes.push(ucf(prefix));\n  return prefixes;\n}, []),\n    VALUE_PREFIXES = PREFIXES.map(function (prefix) {\n  return '-' + prefix + '-';\n}),\n\n\n/**\n * Get sample CSSStyleDeclaration.\n * @returns {CSSStyleDeclaration}\n */\ngetDeclaration = function () {\n  var declaration = void 0;\n  return function () {\n    return declaration = declaration || document.createElement('div').style;\n  };\n}(),\n\n\n/**\n * Normalize name.\n * @param {} propName - A name that is normalized.\n * @returns {string} A normalized name.\n */\nnormalizeName = function () {\n  var rePrefixedName = new RegExp('^(?:' + PREFIXES.join('|') + ')(.)', 'i'),\n      reUc = /[A-Z]/;\n  return function (propName) {\n    return (propName = (propName + '').replace(/\\s/g, '').replace(/-([\\da-z])/gi, function (str, p1) {\n      return p1.toUpperCase();\n    }) // camelCase\n    // 'ms' and 'Ms' are found by rePrefixedName 'i' option\n    .replace(rePrefixedName, function (str, p1) {\n      return reUc.test(p1) ? p1.toLowerCase() : str;\n    }) // Remove prefix\n    ).toLowerCase() === 'float' ? 'cssFloat' : propName;\n  }; // For old CSSOM\n}(),\n\n\n/**\n * Normalize value.\n * @param {} propValue - A value that is normalized.\n * @returns {string} A normalized value.\n */\nnormalizeValue = function () {\n  var rePrefixedValue = new RegExp('^(?:' + VALUE_PREFIXES.join('|') + ')', 'i');\n  return function (propValue) {\n    return (propValue != null ? propValue + '' : '').replace(/\\s/g, '').replace(rePrefixedValue, '');\n  };\n}(),\n\n\n/**\n * Polyfill for `CSS.supports`.\n * @param {string} propName - A name.\n * @param {string} propValue - A value.\n *     Since `CSSStyleDeclaration.setProperty` might return unexpected result,\n *     the `propValue` should be checked before the `cssSupports` is called.\n * @returns {boolean} `true` if given pair is accepted.\n */\ncssSupports = function () {\n  return (\n    // return window.CSS && window.CSS.supports || ((propName, propValue) => {\n    // `CSS.supports` doesn't find prefixed property.\n    function (propName, propValue) {\n      var declaration = getDeclaration();\n      // In some browsers, `declaration[prop] = value` updates any property.\n      propName = propName.replace(/[A-Z]/g, function (str) {\n        return '-' + str.toLowerCase();\n      }); // kebab-case\n      declaration.setProperty(propName, propValue);\n      return declaration[propName] != null && // Because getPropertyValue returns '' if it is unsupported\n      declaration.getPropertyValue(propName) === propValue;\n    }\n  );\n}(),\n\n\n// Cache\npropNames = {},\n    propValues = {};\n\nfunction getName(propName) {\n  propName = normalizeName(propName);\n  if (propName && propNames[propName] == null) {\n    var declaration = getDeclaration();\n\n    if (declaration[propName] != null) {\n      // Original\n      propNames[propName] = propName;\n    } else {\n      // Try with prefixes\n      var ucfName = ucf(propName);\n      if (!NAME_PREFIXES.some(function (prefix) {\n        var prefixed = prefix + ucfName;\n        if (declaration[prefixed] != null) {\n          propNames[propName] = prefixed;\n          return true;\n        }\n        return false;\n      })) {\n        propNames[propName] = false;\n      }\n    }\n  }\n  return propNames[propName] || void 0;\n}\n\nfunction getValue(propName, propValue) {\n  var res = void 0;\n\n  if (!(propName = getName(propName))) {\n    return res;\n  } // Invalid property\n\n  propValues[propName] = propValues[propName] || {};\n  (Array.isArray(propValue) ? propValue : [propValue]).some(function (propValue) {\n    propValue = normalizeValue(propValue);\n\n    if (propValues[propName][propValue] != null) {\n      // Cache\n      if (propValues[propName][propValue] !== false) {\n        res = propValues[propName][propValue];\n        return true;\n      }\n      return false; // Continue to next value\n    }\n\n    if (cssSupports(propName, propValue)) {\n      // Original\n      res = propValues[propName][propValue] = propValue;\n      return true;\n    }\n\n    if (VALUE_PREFIXES.some(function (prefix) {\n      // Try with prefixes\n      var prefixed = prefix + propValue;\n      if (cssSupports(propName, prefixed)) {\n        res = propValues[propName][propValue] = prefixed;\n        return true;\n      }\n      return false;\n    })) {\n      return true;\n    }\n\n    propValues[propName][propValue] = false;\n    return false; // Continue to next value\n  });\n\n  return typeof res === 'string' ? res : void 0; // It might be empty string.\n}\n\nvar CSSPrefix = {\n  getName: getName,\n  getValue: getValue\n};\n\nexport default CSSPrefix;","/* ================================================\n        DON'T MANUALLY EDIT THIS FILE\n================================================ */\n\n/*\n * mClassList\n * https://github.com/anseki/m-class-list\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nfunction normalize(token) {\n  return (token + '').trim();\n} // Not `||`\nfunction applyList(list, element) {\n  element.setAttribute('class', list.join(' '));\n}\n\nfunction _add(list, element, tokens) {\n  if (tokens.filter(function (token) {\n    if (!(token = normalize(token)) || list.indexOf(token) !== -1) {\n      return false;\n    }\n    list.push(token);\n    return true;\n  }).length) {\n    applyList(list, element);\n  }\n}\n\nfunction _remove(list, element, tokens) {\n  if (tokens.filter(function (token) {\n    var i = void 0;\n    if (!(token = normalize(token)) || (i = list.indexOf(token)) === -1) {\n      return false;\n    }\n    list.splice(i, 1);\n    return true;\n  }).length) {\n    applyList(list, element);\n  }\n}\n\nfunction _toggle(list, element, token, force) {\n  var i = list.indexOf(token = normalize(token));\n  if (i !== -1) {\n    if (force) {\n      return true;\n    }\n    list.splice(i, 1);\n    applyList(list, element);\n    return false;\n  }\n  if (force === false) {\n    return false;\n  }\n  list.push(token);\n  applyList(list, element);\n  return true;\n}\n\nfunction _replace(list, element, token, newToken) {\n  var i = void 0;\n  if (!(token = normalize(token)) || !(newToken = normalize(newToken)) || token === newToken || (i = list.indexOf(token)) === -1) {\n    return;\n  }\n  list.splice(i, 1);\n  if (list.indexOf(newToken) === -1) {\n    list.push(newToken);\n  }\n  applyList(list, element);\n}\n\nfunction mClassList(element) {\n  return !mClassList.ignoreNative && element.classList || function () {\n    var list = (element.getAttribute('class') || '').trim().split(/\\s+/).filter(function (token) {\n      return !!token;\n    }),\n        ins = {\n      length: list.length,\n      item: function item(i) {\n        return list[i];\n      },\n      contains: function contains(token) {\n        return list.indexOf(normalize(token)) !== -1;\n      },\n      add: function add() {\n        _add(list, element, Array.prototype.slice.call(arguments));\n        return mClassList.methodChain ? ins : void 0;\n      },\n      remove: function remove() {\n        _remove(list, element, Array.prototype.slice.call(arguments));\n        return mClassList.methodChain ? ins : void 0;\n      },\n\n      toggle: function toggle(token, force) {\n        return _toggle(list, element, token, force);\n      },\n      replace: function replace(token, newToken) {\n        _replace(list, element, token, newToken);\n        return mClassList.methodChain ? ins : void 0;\n      }\n    };\n    return ins;\n  }();\n}\n\nmClassList.methodChain = true;\n\nexport default mClassList;","/* ================================================\n        DON'T MANUALLY EDIT THIS FILE\n================================================ */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * PlainDraggable\n * https://anseki.github.io/plain-draggable/\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nimport PointerEvent from 'pointer-event';\nimport CSSPrefix from 'cssprefix';\nimport AnimEvent from 'anim-event';\nimport mClassList from 'm-class-list';\nmClassList.ignoreNative = true;\n\nvar ZINDEX = 9000,\n    IS_EDGE = '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style && !window.navigator.msPointerEnabled,\n    IS_TRIDENT = !IS_EDGE && !!document.uniqueID,\n    // Future Edge might support `document.uniqueID`.\nIS_GECKO = 'MozAppearance' in document.documentElement.style,\n    IS_BLINK = !IS_EDGE && !IS_GECKO && // Edge has `window.chrome`, and future Gecko might have that.\n!!window.chrome && !!window.CSS,\n    IS_WEBKIT = !IS_EDGE && !IS_TRIDENT && !IS_GECKO && !IS_BLINK && // Some engines support `webkit-*` properties.\n!window.chrome && 'WebkitAppearance' in document.documentElement.style,\n    isObject = function () {\n  var toString = {}.toString,\n      fnToString = {}.hasOwnProperty.toString,\n      objFnString = fnToString.call(Object);\n  return function (obj) {\n    var proto = void 0,\n        constr = void 0;\n    return obj && toString.call(obj) === '[object Object]' && (!(proto = Object.getPrototypeOf(obj)) || (constr = proto.hasOwnProperty('constructor') && proto.constructor) && typeof constr === 'function' && fnToString.call(constr) === objFnString);\n  };\n}(),\n    isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && window.isFinite(value);\n},\n\n\n/** @type {Object.<_id: number, props>} */\ninsProps = {},\n    pointerOffset = {},\n    pointerEvent = new PointerEvent();\n\nvar insId = 0,\n    activeProps = void 0,\n    hasMoved = void 0,\n    body = void 0,\n\n// CSS property/value\ncssValueDraggableCursor = void 0,\n    cssValueDraggingCursor = void 0,\n    cssOrgValueBodyCursor = void 0,\n    cssPropTransitionProperty = void 0,\n    cssPropTransform = void 0,\n    cssPropUserSelect = void 0,\n    cssOrgValueBodyUserSelect = void 0,\n\n// Try to set `cursor` property.\ncssWantedValueDraggableCursor = IS_WEBKIT ? ['all-scroll', 'move'] : ['grab', 'all-scroll', 'move'],\n    cssWantedValueDraggingCursor = IS_WEBKIT ? 'move' : ['grabbing', 'move'],\n\n// class\ndraggableClass = 'plain-draggable',\n    draggingClass = 'plain-draggable-dragging',\n    movingClass = 'plain-draggable-moving';\n\nfunction copyTree(obj) {\n  return !obj ? obj : isObject(obj) ? Object.keys(obj).reduce(function (copyObj, key) {\n    copyObj[key] = copyTree(obj[key]);\n    return copyObj;\n  }, {}) : Array.isArray(obj) ? obj.map(copyTree) : obj;\n}\n\nfunction hasChanged(a, b) {\n  var typeA = void 0,\n      keysA = void 0;\n  return (typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== (typeof b === 'undefined' ? 'undefined' : _typeof(b)) || (typeA = isObject(a) ? 'obj' : Array.isArray(a) ? 'array' : '') !== (isObject(b) ? 'obj' : Array.isArray(b) ? 'array' : '') || (typeA === 'obj' ? hasChanged(keysA = Object.keys(a).sort(), Object.keys(b).sort()) || keysA.some(function (prop) {\n    return hasChanged(a[prop], b[prop]);\n  }) : typeA === 'array' ? a.length !== b.length || a.some(function (aVal, i) {\n    return hasChanged(aVal, b[i]);\n  }) : a !== b);\n}\n\n/**\n * @param {Element} element - A target element.\n * @returns {boolean} `true` if connected element.\n */\nfunction isElement(element) {\n  return !!(element && element.nodeType === Node.ELEMENT_NODE &&\n  // element instanceof HTMLElement &&\n  typeof element.getBoundingClientRect === 'function' && !(element.compareDocumentPosition(document) & Node.DOCUMENT_POSITION_DISCONNECTED));\n}\n\n/**\n * An object that simulates `DOMRect` to indicate a bounding-box.\n * @typedef {Object} BBox\n * @property {(number|null)} left - document coordinate\n * @property {(number|null)} top - document coordinate\n * @property {(number|null)} right - document coordinate\n * @property {(number|null)} bottom - document coordinate\n * @property {(number|null)} x - Substitutes for left\n * @property {(number|null)} y - Substitutes for top\n * @property {(number|null)} width\n * @property {(number|null)} height\n */\n\n/**\n * @param {Object} bBox - A target object.\n * @returns {(BBox|null)} A normalized `BBox`, or null if `bBox` is invalid.\n */\nfunction validBBox(bBox) {\n  if (!isObject(bBox)) {\n    return null;\n  }\n  var value = void 0;\n  if (isFinite(value = bBox.left) || isFinite(value = bBox.x)) {\n    bBox.left = bBox.x = value;\n  } else {\n    return null;\n  }\n  if (isFinite(value = bBox.top) || isFinite(value = bBox.y)) {\n    bBox.top = bBox.y = value;\n  } else {\n    return null;\n  }\n\n  if (isFinite(bBox.width) && bBox.width >= 0) {\n    bBox.right = bBox.left + bBox.width;\n  } else if (isFinite(bBox.right) && bBox.right >= bBox.left) {\n    bBox.width = bBox.right - bBox.left;\n  } else {\n    return null;\n  }\n  if (isFinite(bBox.height) && bBox.height >= 0) {\n    bBox.bottom = bBox.top + bBox.height;\n  } else if (isFinite(bBox.bottom) && bBox.bottom >= bBox.top) {\n    bBox.height = bBox.bottom - bBox.top;\n  } else {\n    return null;\n  }\n  return bBox;\n}\n\n/**\n * A value that is Pixels or Ratio\n * @typedef {{value: number, isRatio: boolean}} PPValue\n */\n\nfunction validPPValue(value) {\n\n  // Get PPValue from string (all `/s` were already removed)\n  function string2PPValue(inString) {\n    var matches = /^(.+?)(%)?$/.exec(inString);\n    var value = void 0,\n        isRatio = void 0;\n    return matches && isFinite(value = parseFloat(matches[1])) ? { value: (isRatio = !!(matches[2] && value)) ? value / 100 : value, isRatio: isRatio } : null; // 0% -> 0\n  }\n\n  return isFinite(value) ? { value: value, isRatio: false } : typeof value === 'string' ? string2PPValue(value.replace(/\\s/g, '')) : null;\n}\n\nfunction ppValue2OptionValue(ppValue) {\n  return ppValue.isRatio ? ppValue.value * 100 + '%' : ppValue.value;\n}\n\nfunction resolvePPValue(ppValue, baseOrigin, baseSize) {\n  return typeof ppValue === 'number' ? ppValue : baseOrigin + ppValue.value * (ppValue.isRatio ? baseSize : 1);\n}\n\n/**\n * An object that simulates BBox but properties are PPValue.\n * @typedef {Object} PPBBox\n */\n\n/**\n * @param {Object} bBox - A target object.\n * @returns {(PPBBox|null)} A normalized `PPBBox`, or null if `bBox` is invalid.\n */\nfunction validPPBBox(bBox) {\n  if (!isObject(bBox)) {\n    return null;\n  }\n  var ppValue = void 0;\n  if ((ppValue = validPPValue(bBox.left)) || (ppValue = validPPValue(bBox.x))) {\n    bBox.left = bBox.x = ppValue;\n  } else {\n    return null;\n  }\n  if ((ppValue = validPPValue(bBox.top)) || (ppValue = validPPValue(bBox.y))) {\n    bBox.top = bBox.y = ppValue;\n  } else {\n    return null;\n  }\n\n  if ((ppValue = validPPValue(bBox.width)) && ppValue.value >= 0) {\n    bBox.width = ppValue;\n    delete bBox.right;\n  } else if (ppValue = validPPValue(bBox.right)) {\n    bBox.right = ppValue;\n    delete bBox.width;\n  } else {\n    return null;\n  }\n  if ((ppValue = validPPValue(bBox.height)) && ppValue.value >= 0) {\n    bBox.height = ppValue;\n    delete bBox.bottom;\n  } else if (ppValue = validPPValue(bBox.bottom)) {\n    bBox.bottom = ppValue;\n    delete bBox.height;\n  } else {\n    return null;\n  }\n  return bBox;\n}\n\nfunction ppBBox2OptionObject(ppBBox) {\n  return Object.keys(ppBBox).reduce(function (obj, prop) {\n    obj[prop] = ppValue2OptionValue(ppBBox[prop]);\n    return obj;\n  }, {});\n}\n\n// PPBBox -> BBox\nfunction resolvePPBBox(ppBBox, baseBBox) {\n  var prop2Axis = { left: 'x', right: 'x', x: 'x', width: 'x',\n    top: 'y', bottom: 'y', y: 'y', height: 'y' },\n      baseOriginXY = { x: baseBBox.left, y: baseBBox.top },\n      baseSizeXY = { x: baseBBox.width, y: baseBBox.height };\n  return validBBox(Object.keys(ppBBox).reduce(function (bBox, prop) {\n    bBox[prop] = resolvePPValue(ppBBox[prop], prop === 'width' || prop === 'height' ? 0 : baseOriginXY[prop2Axis[prop]], baseSizeXY[prop2Axis[prop]]);\n    return bBox;\n  }, {}));\n}\n\n/**\n * @param {Element} element - A target element.\n * @param {?boolean} getPaddingBox - Get padding-box instead of border-box as bounding-box.\n * @returns {BBox} A bounding-box of `element`.\n */\nfunction getBBox(element, getPaddingBox) {\n  var rect = element.getBoundingClientRect(),\n      bBox = { left: rect.left, top: rect.top, width: rect.width, height: rect.height };\n  bBox.left += window.pageXOffset;\n  bBox.top += window.pageYOffset;\n  if (getPaddingBox) {\n    var style = window.getComputedStyle(element, ''),\n        borderTop = parseFloat(style.borderTopWidth) || 0,\n        borderRight = parseFloat(style.borderRightWidth) || 0,\n        borderBottom = parseFloat(style.borderBottomWidth) || 0,\n        borderLeft = parseFloat(style.borderLeftWidth) || 0;\n    bBox.left += borderLeft;\n    bBox.top += borderTop;\n    bBox.width -= borderLeft + borderRight;\n    bBox.height -= borderTop + borderBottom;\n  }\n  return validBBox(bBox);\n}\n\n/**\n * Optimize an element for animation.\n * @param {Element} element - A target element.\n * @param {?boolean} gpuTrigger - Initialize for SVGElement if `true`.\n * @returns {Element} A target element.\n */\nfunction initAnim(element, gpuTrigger) {\n  var style = element.style;\n  style.webkitTapHighlightColor = 'transparent';\n\n  // Only when it has no shadow\n  var cssPropBoxShadow = CSSPrefix.getName('boxShadow'),\n      boxShadow = window.getComputedStyle(element, '')[cssPropBoxShadow];\n  if (!boxShadow || boxShadow === 'none') {\n    style[cssPropBoxShadow] = '0 0 1px transparent';\n  }\n\n  if (gpuTrigger && cssPropTransform) {\n    style[cssPropTransform] = 'translateZ(0)';\n  }\n  return element;\n}\n\nfunction setDraggableCursor(element, orgCursor) {\n  if (cssValueDraggableCursor == null) {\n    if (cssWantedValueDraggableCursor !== false) {\n      cssValueDraggableCursor = CSSPrefix.getValue('cursor', cssWantedValueDraggableCursor);\n    }\n    // The wanted value was denied, or changing is not wanted.\n    if (cssValueDraggableCursor == null) {\n      cssValueDraggableCursor = false;\n    }\n  }\n  // Update it to change a state even if cssValueDraggableCursor is false.\n  element.style.cursor = cssValueDraggableCursor === false ? orgCursor : cssValueDraggableCursor;\n}\n\nfunction setDraggingCursor(element) {\n  if (cssValueDraggingCursor == null) {\n    if (cssWantedValueDraggingCursor !== false) {\n      cssValueDraggingCursor = CSSPrefix.getValue('cursor', cssWantedValueDraggingCursor);\n    }\n    // The wanted value was denied, or changing is not wanted.\n    if (cssValueDraggingCursor == null) {\n      cssValueDraggingCursor = false;\n    }\n  }\n  if (cssValueDraggingCursor !== false) {\n    element.style.cursor = cssValueDraggingCursor;\n  }\n}\n\n/**\n * Move by `translate`.\n * @param {props} props - `props` of instance.\n * @param {{left: number, top: number}} position - New position.\n * @returns {boolean} `true` if it was moved.\n */\nfunction moveTranslate(props, position) {\n  var elementBBox = props.elementBBox;\n  if (position.left !== elementBBox.left || position.top !== elementBBox.top) {\n    var offset = props.htmlOffset;\n    props.elementStyle[cssPropTransform] = 'translate(' + (position.left + offset.left) + 'px, ' + (position.top + offset.top) + 'px)';\n    return true;\n  }\n  return false;\n}\n\n/**\n * Set `props.element` position.\n * @param {props} props - `props` of instance.\n * @param {{left: number, top: number}} position - New position.\n * @param {function} [cbCheck] - Callback that is called with valid position, cancel moving if it returns `false`.\n * @returns {boolean} `true` if it was moved.\n */\nfunction move(props, position, cbCheck) {\n  var elementBBox = props.elementBBox;\n\n  function fix() {\n    if (props.minLeft >= props.maxLeft) {\n      // Disabled\n      position.left = elementBBox.left;\n    } else if (position.left < props.minLeft) {\n      position.left = props.minLeft;\n    } else if (position.left > props.maxLeft) {\n      position.left = props.maxLeft;\n    }\n    if (props.minTop >= props.maxTop) {\n      // Disabled\n      position.top = elementBBox.top;\n    } else if (position.top < props.minTop) {\n      position.top = props.minTop;\n    } else if (position.top > props.maxTop) {\n      position.top = props.maxTop;\n    }\n  }\n\n  fix();\n  if (cbCheck) {\n    if (cbCheck(position) === false) {\n      return false;\n    }\n    fix(); // Again\n  }\n\n  var moved = props.moveElm(props, position);\n  if (moved) {\n    // Update elementBBox\n    props.elementBBox = validBBox({ left: position.left, top: position.top,\n      width: elementBBox.width, height: elementBBox.height });\n  }\n  return moved;\n}\n\n/**\n * Initialize HTMLElement for `translate`, and get `offset` that is used by `moveTranslate`.\n * @param {props} props - `props` of instance.\n * @returns {BBox} Current BBox without animation, i.e. left/top properties.\n */\nfunction initTranslate(props) {\n  var element = props.element,\n      elementStyle = props.elementStyle,\n      curPosition = getBBox(element),\n      // Get BBox before change style.\n  RESTORE_PROPS = ['display', 'marginTop', 'marginBottom', 'width', 'height'];\n  RESTORE_PROPS.unshift(cssPropTransform);\n\n  // Reset `transition-property` every time because it might be changed frequently.\n  var orgTransitionProperty = elementStyle[cssPropTransitionProperty];\n  elementStyle[cssPropTransitionProperty] = 'none'; // Disable animation\n  var fixPosition = getBBox(element);\n\n  if (!props.orgStyle) {\n    props.orgStyle = RESTORE_PROPS.reduce(function (orgStyle, prop) {\n      orgStyle[prop] = elementStyle[prop] || '';\n      return orgStyle;\n    }, {});\n    props.lastStyle = {};\n  } else {\n    RESTORE_PROPS.forEach(function (prop) {\n      // Skip this if it seems user changed it. (it can't check perfectly.)\n      if (props.lastStyle[prop] == null || elementStyle[prop] === props.lastStyle[prop]) {\n        elementStyle[prop] = props.orgStyle[prop];\n      }\n    });\n  }\n\n  var orgSize = getBBox(element),\n      cmpStyle = window.getComputedStyle(element, '');\n  // https://www.w3.org/TR/css-transforms-1/#transformable-element\n  if (cmpStyle.display === 'inline') {\n    elementStyle.display = 'inline-block';\n    ['Top', 'Bottom'].forEach(function (dirProp) {\n      var padding = parseFloat(cmpStyle['padding' + dirProp]);\n      // paddingTop/Bottom make padding but don't make space -> negative margin in inline-block\n      // marginTop/Bottom don't work in inline element -> `0` in inline-block\n      elementStyle['margin' + dirProp] = padding ? '-' + padding + 'px' : '0';\n    });\n  }\n  elementStyle[cssPropTransform] = 'translate(0, 0)';\n  // Get document offset.\n  var newBBox = getBBox(element);\n  var offset = props.htmlOffset = { left: newBBox.left ? -newBBox.left : 0, top: newBBox.top ? -newBBox.top : 0 }; // avoid `-0`\n\n  // Restore position\n  elementStyle[cssPropTransform] = 'translate(' + (curPosition.left + offset.left) + 'px, ' + (curPosition.top + offset.top) + 'px)';\n  // Restore size\n  ['width', 'height'].forEach(function (prop) {\n    if (newBBox[prop] !== orgSize[prop]) {\n      // Ignore `box-sizing`\n      elementStyle[prop] = orgSize[prop] + 'px';\n      newBBox = getBBox(element);\n      if (newBBox[prop] !== orgSize[prop]) {\n        // Retry\n        elementStyle[prop] = orgSize[prop] - (newBBox[prop] - orgSize[prop]) + 'px';\n      }\n    }\n    props.lastStyle[prop] = elementStyle[prop];\n  });\n\n  // Restore `transition-property`\n  element.offsetWidth; /* force reflow */ // eslint-disable-line no-unused-expressions\n  elementStyle[cssPropTransitionProperty] = orgTransitionProperty;\n  if (fixPosition.left !== curPosition.left || fixPosition.top !== curPosition.top) {\n    // It seems that it is moving.\n    elementStyle[cssPropTransform] = 'translate(' + (fixPosition.left + offset.left) + 'px, ' + (fixPosition.top + offset.top) + 'px)';\n  }\n\n  return fixPosition;\n}\n\n/**\n * Set `elementBBox`, `containmentBBox`, `min/max``Left/Top` and `snapTargets`.\n * @param {props} props - `props` of instance.\n * @param {string} [eventType] - A type of event that kicked this method.\n * @returns {void}\n */\nfunction initBBox(props, eventType) {\n  // eslint-disable-line no-unused-vars\n  var docBBox = getBBox(document.documentElement),\n      elementBBox = props.elementBBox = props.initElm(props),\n      // reset offset etc.\n  containmentBBox = props.containmentBBox = props.containmentIsBBox ? resolvePPBBox(props.options.containment, docBBox) || docBBox : getBBox(props.options.containment, true);\n  props.minLeft = containmentBBox.left;\n  props.maxLeft = containmentBBox.right - elementBBox.width;\n  props.minTop = containmentBBox.top;\n  props.maxTop = containmentBBox.bottom - elementBBox.height;\n  // Adjust position\n  move(props, { left: elementBBox.left, top: elementBBox.top });\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @returns {void}\n */\nfunction dragEnd(props) {\n  setDraggableCursor(props.options.handle, props.orgCursor);\n  body.style.cursor = cssOrgValueBodyCursor;\n\n  if (props.options.zIndex !== false) {\n    props.elementStyle.zIndex = props.orgZIndex;\n  }\n  if (cssPropUserSelect) {\n    body.style[cssPropUserSelect] = cssOrgValueBodyUserSelect;\n  }\n  var classList = mClassList(props.element);\n  if (movingClass) {\n    classList.remove(movingClass);\n  }\n  if (draggingClass) {\n    classList.remove(draggingClass);\n  }\n\n  activeProps = null;\n  pointerEvent.cancel(); // Reset pointer (activeProps must be null because this calls endHandler)\n  if (props.onDragEnd) {\n    props.onDragEnd({ left: props.elementBBox.left, top: props.elementBBox.top });\n  }\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {{clientX, clientY}} pointerXY - This might be MouseEvent, Touch of TouchEvent or Object.\n * @returns {boolean} `true` if it started.\n */\nfunction dragStart(props, pointerXY) {\n  if (props.disabled) {\n    return false;\n  }\n  if (props.onDragStart && props.onDragStart(pointerXY) === false) {\n    return false;\n  }\n  if (activeProps) {\n    dragEnd(activeProps);\n  } // activeItem is normally null by pointerEvent.end.\n\n  setDraggingCursor(props.options.handle);\n  body.style.cursor = cssValueDraggingCursor || // If it is `false` or `''`\n  window.getComputedStyle(props.options.handle, '').cursor;\n\n  if (props.options.zIndex !== false) {\n    props.elementStyle.zIndex = props.options.zIndex;\n  }\n  if (cssPropUserSelect) {\n    body.style[cssPropUserSelect] = 'none';\n  }\n  if (draggingClass) {\n    mClassList(props.element).add(draggingClass);\n  }\n\n  activeProps = props;\n  hasMoved = false;\n  pointerOffset.left = props.elementBBox.left - (pointerXY.clientX + window.pageXOffset);\n  pointerOffset.top = props.elementBBox.top - (pointerXY.clientY + window.pageYOffset);\n  return true;\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {Object} newOptions - New options.\n * @returns {void}\n */\nfunction _setOptions(props, newOptions) {\n  var options = props.options;\n  var needsInitBBox = void 0;\n\n  // containment\n  if (newOptions.containment) {\n    var bBox = void 0;\n    if (isElement(newOptions.containment)) {\n      // Specific element\n      if (newOptions.containment !== options.containment) {\n        options.containment = newOptions.containment;\n        props.containmentIsBBox = false;\n        needsInitBBox = true;\n      }\n    } else if ((bBox = validPPBBox(copyTree(newOptions.containment))) && // bBox\n    hasChanged(bBox, options.containment)) {\n      options.containment = bBox;\n      props.containmentIsBBox = true;\n      needsInitBBox = true;\n    }\n  }\n\n  if (needsInitBBox) {\n    initBBox(props);\n  }\n\n  // handle\n  if (isElement(newOptions.handle) && newOptions.handle !== options.handle) {\n    if (options.handle) {\n      // Restore\n      options.handle.style.cursor = props.orgCursor;\n      if (cssPropUserSelect) {\n        options.handle.style[cssPropUserSelect] = props.orgUserSelect;\n      }\n      pointerEvent.removeStartHandler(options.handle, props.pointerEventHandlerId);\n    }\n    var handle = options.handle = newOptions.handle;\n    props.orgCursor = handle.style.cursor;\n    setDraggableCursor(handle, props.orgCursor);\n    if (cssPropUserSelect) {\n      props.orgUserSelect = handle.style[cssPropUserSelect];\n      handle.style[cssPropUserSelect] = 'none';\n    }\n    pointerEvent.addStartHandler(handle, props.pointerEventHandlerId);\n  }\n\n  // zIndex\n  if (isFinite(newOptions.zIndex) || newOptions.zIndex === false) {\n    options.zIndex = newOptions.zIndex;\n    if (props === activeProps) {\n      props.elementStyle.zIndex = options.zIndex === false ? props.orgZIndex : options.zIndex;\n    }\n  }\n\n  // left/top\n  var position = { left: props.elementBBox.left, top: props.elementBBox.top };\n  var needsMove = void 0;\n  if (isFinite(newOptions.left) && newOptions.left !== position.left) {\n    position.left = newOptions.left;\n    needsMove = true;\n  }\n  if (isFinite(newOptions.top) && newOptions.top !== position.top) {\n    position.top = newOptions.top;\n    needsMove = true;\n  }\n  if (needsMove) {\n    move(props, position);\n  }\n\n  // Event listeners\n  ['onDrag', 'onMove', 'onDragStart', 'onMoveStart', 'onDragEnd'].forEach(function (option) {\n    if (typeof newOptions[option] === 'function') {\n      options[option] = newOptions[option];\n      props[option] = options[option].bind(props.ins);\n    } else if (newOptions.hasOwnProperty(option) && newOptions[option] == null) {\n      options[option] = props[option] = void 0;\n    }\n  });\n}\n\nvar PlainDraggable = function () {\n  /**\n   * Create a `PlainDraggable` instance.\n   * @param {Element} element - Target element.\n   * @param {Object} [options] - Options.\n   */\n  function PlainDraggable(element, options) {\n    _classCallCheck(this, PlainDraggable);\n\n    var props = {\n      ins: this,\n      options: { // Initial options (not default)\n        zIndex: ZINDEX // Initial state.\n      },\n      disabled: false\n    };\n\n    Object.defineProperty(this, '_id', { value: ++insId });\n    props._id = this._id;\n    insProps[this._id] = props;\n\n    if (!isElement(element) || element === body) {\n      throw new Error('This element is not accepted.');\n    }\n    if (!options) {\n      options = {};\n    } else if (!isObject(options)) {\n      throw new Error('Invalid options.');\n    }\n\n    var gpuTrigger = true;\n    var cssPropWillChange = CSSPrefix.getName('willChange');\n    if (cssPropWillChange) {\n      gpuTrigger = false;\n    }\n\n    if (!options.leftTop && cssPropTransform) {\n      // translate\n      if (cssPropWillChange) {\n        element.style[cssPropWillChange] = 'transform';\n      }\n      props.initElm = initTranslate;\n      props.moveElm = moveTranslate;\n    } else {\n      // left and top\n      throw new Error('`transform` is not supported.');\n    }\n\n    props.element = initAnim(element, gpuTrigger);\n    props.elementStyle = element.style;\n    props.orgZIndex = props.elementStyle.zIndex;\n    if (draggableClass) {\n      mClassList(element).add(draggableClass);\n    }\n    props.pointerEventHandlerId = pointerEvent.regStartHandler(function (pointerXY) {\n      return dragStart(props, pointerXY);\n    });\n\n    // Default options\n    if (!options.containment) {\n      var parent = void 0;\n      options.containment = (parent = element.parentNode) && isElement(parent) ? parent : body;\n    }\n    if (!options.handle) {\n      options.handle = element;\n    }\n\n    _setOptions(props, options);\n  }\n\n  _createClass(PlainDraggable, [{\n    key: 'remove',\n    value: function remove() {\n      var props = insProps[this._id];\n      this.disabled = true; // To restore element and reset pointer\n      pointerEvent.unregStartHandler(pointerEvent.removeStartHandler(props.options.handle, props.pointerEventHandlerId));\n      delete insProps[this._id];\n    }\n\n    /**\n     * @param {Object} options - New options.\n     * @returns {PlainDraggable} Current instance itself.\n     */\n\n  }, {\n    key: 'setOptions',\n    value: function setOptions(options) {\n      if (isObject(options)) {\n        _setOptions(insProps[this._id], options);\n      }\n      return this;\n    }\n  }, {\n    key: 'position',\n    value: function position() {\n      initBBox(insProps[this._id]);\n      return this;\n    }\n  }, {\n    key: 'disabled',\n    get: function get() {\n      return insProps[this._id].disabled;\n    },\n    set: function set(value) {\n      var props = insProps[this._id];\n      if ((value = !!value) !== props.disabled) {\n        props.disabled = value;\n        if (props.disabled) {\n          if (props === activeProps) {\n            dragEnd(props);\n          }\n          props.options.handle.style.cursor = props.orgCursor;\n          if (cssPropUserSelect) {\n            props.options.handle.style[cssPropUserSelect] = props.orgUserSelect;\n          }\n          if (draggableClass) {\n            mClassList(props.element).remove(draggableClass);\n          }\n        } else {\n          setDraggableCursor(props.options.handle, props.orgCursor);\n          if (cssPropUserSelect) {\n            props.options.handle.style[cssPropUserSelect] = 'none';\n          }\n          if (draggableClass) {\n            mClassList(props.element).add(draggableClass);\n          }\n        }\n      }\n    }\n  }, {\n    key: 'element',\n    get: function get() {\n      return insProps[this._id].element;\n    }\n  }, {\n    key: 'rect',\n    get: function get() {\n      return copyTree(insProps[this._id].elementBBox);\n    }\n  }, {\n    key: 'left',\n    get: function get() {\n      return insProps[this._id].elementBBox.left;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { left: value });\n    }\n  }, {\n    key: 'top',\n    get: function get() {\n      return insProps[this._id].elementBBox.top;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { top: value });\n    }\n  }, {\n    key: 'containment',\n    get: function get() {\n      var props = insProps[this._id];\n      return props.containmentIsBBox ? ppBBox2OptionObject(props.options.containment) : props.options.containment;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { containment: value });\n    }\n  }, {\n    key: 'handle',\n    get: function get() {\n      return insProps[this._id].options.handle;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { handle: value });\n    }\n  }, {\n    key: 'zIndex',\n    get: function get() {\n      return insProps[this._id].options.zIndex;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { zIndex: value });\n    }\n  }, {\n    key: 'onDrag',\n    get: function get() {\n      return insProps[this._id].options.onDrag;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onDrag: value });\n    }\n  }, {\n    key: 'onMove',\n    get: function get() {\n      return insProps[this._id].options.onMove;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onMove: value });\n    }\n  }, {\n    key: 'onDragStart',\n    get: function get() {\n      return insProps[this._id].options.onDragStart;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onDragStart: value });\n    }\n  }, {\n    key: 'onMoveStart',\n    get: function get() {\n      return insProps[this._id].options.onMoveStart;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onMoveStart: value });\n    }\n  }, {\n    key: 'onDragEnd',\n    get: function get() {\n      return insProps[this._id].options.onDragEnd;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onDragEnd: value });\n    }\n  }], [{\n    key: 'draggableCursor',\n    get: function get() {\n      return cssWantedValueDraggableCursor;\n    },\n    set: function set(value) {\n      if (cssWantedValueDraggableCursor !== value) {\n        cssWantedValueDraggableCursor = value;\n        cssValueDraggableCursor = null; // Reset\n        Object.keys(insProps).forEach(function (id) {\n          var props = insProps[id];\n          if (props.disabled || props === activeProps && cssValueDraggingCursor !== false) {\n            return;\n          }\n          setDraggableCursor(props.options.handle, props.orgCursor);\n          if (props === activeProps) {\n            // Since cssValueDraggingCursor is `false`, copy cursor again.\n            body.style.cursor = cssOrgValueBodyCursor;\n            body.style.cursor = window.getComputedStyle(props.options.handle, '').cursor;\n          }\n        });\n      }\n    }\n  }, {\n    key: 'draggingCursor',\n    get: function get() {\n      return cssWantedValueDraggingCursor;\n    },\n    set: function set(value) {\n      if (cssWantedValueDraggingCursor !== value) {\n        cssWantedValueDraggingCursor = value;\n        cssValueDraggingCursor = null; // Reset\n        if (activeProps) {\n          setDraggingCursor(activeProps.options.handle);\n          if (cssValueDraggingCursor === false) {\n            setDraggableCursor(activeProps.options.handle, activeProps.orgCursor); // draggableCursor\n            body.style.cursor = cssOrgValueBodyCursor;\n          }\n          body.style.cursor = cssValueDraggingCursor || // If it is `false` or `''`\n          window.getComputedStyle(activeProps.options.handle, '').cursor;\n        }\n      }\n    }\n  }, {\n    key: 'draggableClass',\n    get: function get() {\n      return draggableClass;\n    },\n    set: function set(value) {\n      value = value ? value + '' : void 0;\n      if (value !== draggableClass) {\n        Object.keys(insProps).forEach(function (id) {\n          var props = insProps[id];\n          if (!props.disabled) {\n            var classList = mClassList(props.element);\n            if (draggableClass) {\n              classList.remove(draggableClass);\n            }\n            if (value) {\n              classList.add(value);\n            }\n          }\n        });\n        draggableClass = value;\n      }\n    }\n  }, {\n    key: 'draggingClass',\n    get: function get() {\n      return draggingClass;\n    },\n    set: function set(value) {\n      value = value ? value + '' : void 0;\n      if (value !== draggingClass) {\n        if (activeProps) {\n          var classList = mClassList(activeProps.element);\n          if (draggingClass) {\n            classList.remove(draggingClass);\n          }\n          if (value) {\n            classList.add(value);\n          }\n        }\n        draggingClass = value;\n      }\n    }\n  }, {\n    key: 'movingClass',\n    get: function get() {\n      return movingClass;\n    },\n    set: function set(value) {\n      value = value ? value + '' : void 0;\n      if (value !== movingClass) {\n        if (activeProps && hasMoved) {\n          var classList = mClassList(activeProps.element);\n          if (movingClass) {\n            classList.remove(movingClass);\n          }\n          if (value) {\n            classList.add(value);\n          }\n        }\n        movingClass = value;\n      }\n    }\n  }]);\n\n  return PlainDraggable;\n}();\n\npointerEvent.addMoveHandler(document, function (pointerXY) {\n  if (!activeProps) {\n    return;\n  }\n  var position = {\n    left: pointerXY.clientX + window.pageXOffset + pointerOffset.left,\n    top: pointerXY.clientY + window.pageYOffset + pointerOffset.top\n  };\n  if (move(activeProps, position, activeProps.onDrag)) {\n\n    if (!hasMoved) {\n      hasMoved = true;\n      if (movingClass) {\n        mClassList(activeProps.element).add(movingClass);\n      }\n      if (activeProps.onMoveStart) {\n        activeProps.onMoveStart(position);\n      }\n    }\n    if (activeProps.onMove) {\n      activeProps.onMove(position);\n    }\n  }\n});\n\n{\n  var endHandler = function endHandler() {\n    if (activeProps) {\n      dragEnd(activeProps);\n    }\n  };\n\n  pointerEvent.addEndHandler(document, endHandler);\n  pointerEvent.addCancelHandler(document, endHandler);\n}\n\n{\n  var initDoc = function initDoc() {\n    cssPropTransitionProperty = CSSPrefix.getName('transitionProperty');\n    cssPropTransform = CSSPrefix.getName('transform');\n    cssOrgValueBodyCursor = body.style.cursor;\n    if (cssPropUserSelect = CSSPrefix.getName('userSelect')) {\n      cssOrgValueBodyUserSelect = body.style[cssPropUserSelect];\n    }\n\n    // Init active item when layout is changed, and init others later.\n\n    var LAZY_INIT_DELAY = 200;\n    var initDoneItems = {},\n        lazyInitTimer = void 0;\n\n    function checkInitBBox(props, eventType) {\n      if (props.initElm) {\n        // Easy checking for instance without errors.\n        initBBox(props, eventType);\n      } // eslint-disable-line brace-style\n    }\n\n    function initAll(eventType) {\n      clearTimeout(lazyInitTimer);\n      Object.keys(insProps).forEach(function (id) {\n        if (!initDoneItems[id]) {\n          checkInitBBox(insProps[id], eventType);\n        }\n      });\n      initDoneItems = {};\n    }\n\n    var layoutChanging = false; // Gecko bug, multiple calling by `resize`.\n    var layoutChange = AnimEvent.add(function (event) {\n      if (layoutChanging) {\n        return;\n      }\n      layoutChanging = true;\n\n      if (activeProps) {\n        checkInitBBox(activeProps, event.type);\n        pointerEvent.move();\n        initDoneItems[activeProps._id] = true;\n      }\n      clearTimeout(lazyInitTimer);\n      lazyInitTimer = setTimeout(function () {\n        initAll(event.type);\n      }, LAZY_INIT_DELAY);\n\n      layoutChanging = false;\n    });\n    window.addEventListener('resize', layoutChange, true);\n    window.addEventListener('scroll', layoutChange, true);\n  };\n\n  if (body = document.body) {\n    initDoc();\n  } else {\n    document.addEventListener('DOMContentLoaded', function () {\n      body = document.body;\n      initDoc();\n    }, true);\n  }\n}\n\nPlainDraggable.limit = true;\n\nexport default PlainDraggable;","/* ================================================\n        DON'T MANUALLY EDIT THIS FILE\n================================================ */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * PlainOverlay\n * https://anseki.github.io/plain-overlay/\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nimport CSSPrefix from 'cssprefix';\nimport AnimEvent from 'anim-event';\nimport mClassList from 'm-class-list';\nimport TimedTransition from 'timed-transition';\n/* Static ESM */ /* import CSS_TEXT from './default.scss' */ var CSS_TEXT = \".plainoverlay{-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);box-shadow:0 0 1px rgba(0,0,0,0)}.plainoverlay{position:absolute;left:0;top:0;overflow:hidden;background-color:rgba(136,136,136,0.6);cursor:wait;z-index:9000;-webkit-transition-property:opacity;-moz-transition-property:opacity;-o-transition-property:opacity;transition-property:opacity;-webkit-transition-duration:200ms;-moz-transition-duration:200ms;-o-transition-duration:200ms;transition-duration:200ms;-webkit-transition-timing-function:linear;-moz-transition-timing-function:linear;-o-transition-timing-function:linear;transition-timing-function:linear;opacity:0}.plainoverlay.plainoverlay-show{opacity:1}.plainoverlay.plainoverlay-force{-webkit-transition-property:none;-moz-transition-property:none;-o-transition-property:none;transition-property:none}.plainoverlay.plainoverlay-hide{display:none}.plainoverlay.plainoverlay-doc{position:fixed;left:-200px;top:-200px;overflow:visible;padding:200px;width:100vw;height:100vh}.plainoverlay-body{width:100%;height:100%;display:-webkit-flex;display:flex;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;align-items:center}.plainoverlay.plainoverlay-doc .plainoverlay-body{width:100vw;height:100vh}\";\nmClassList.ignoreNative = true;\n\nvar APP_ID = 'plainoverlay',\n    STYLE_ELEMENT_ID = APP_ID + '-style',\n    STYLE_CLASS = APP_ID,\n    STYLE_CLASS_DOC = APP_ID + '-doc',\n    STYLE_CLASS_SHOW = APP_ID + '-show',\n    STYLE_CLASS_HIDE = APP_ID + '-hide',\n    STYLE_CLASS_FORCE = APP_ID + '-force',\n    STYLE_CLASS_BODY = APP_ID + '-body',\n    FACE_DEFS_ELEMENT_ID = APP_ID + '-builtin-face-defs',\n    STATE_HIDDEN = 0,\n    STATE_SHOWING = 1,\n    STATE_SHOWN = 2,\n    STATE_HIDING = 3,\n\n// DURATION = 2500, // COPY: default.scss\nDURATION = 200,\n    // COPY: default.scss\nTOLERANCE = 0.5,\n    IS_EDGE = '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style && !window.navigator.msPointerEnabled,\n    IS_TRIDENT = !IS_EDGE && !!document.uniqueID,\n    // Future Edge might support `document.uniqueID`.\nIS_GECKO = 'MozAppearance' in document.documentElement.style,\n    IS_BLINK = !IS_EDGE && !IS_GECKO && // Edge has `window.chrome`, and future Gecko might have that.\n!!window.chrome && !!window.CSS,\n\n// [DEBUG]\nIS_WEBKIT = !IS_EDGE && !IS_TRIDENT && !IS_GECKO && !IS_BLINK && // Some engines support `webkit-*` properties.\n!window.chrome && 'WebkitAppearance' in document.documentElement.style,\n\n// [/DEBUG]\n\nisObject = function () {\n  var toString = {}.toString,\n      fnToString = {}.hasOwnProperty.toString,\n      objFnString = fnToString.call(Object);\n  return function (obj) {\n    var proto = void 0,\n        constr = void 0;\n    return obj && toString.call(obj) === '[object Object]' && (!(proto = Object.getPrototypeOf(obj)) || (constr = proto.hasOwnProperty('constructor') && proto.constructor) && typeof constr === 'function' && fnToString.call(constr) === objFnString);\n  };\n}(),\n    isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && window.isFinite(value);\n},\n\n\n/**\n * An object that has properties of instance.\n * @typedef {Object} props\n * @property {Element} elmTarget - Target element.\n * @property {Element} elmTargetBody - Target body element.\n * @property {Element} elmOverlay - Overlay element.\n * @property {Element} elmOverlayBody - Overlay body element.\n * @property {boolean} isDoc - `true` if target is document.\n * @property {Window} window - Window that conatins target element.\n * @property {HTMLDocument} document - Document that conatins target element.\n * @property {TimedTransition} transition - TimedTransition instance.\n * @property {number} state - Current state.\n * @property {Object} options - Options.\n */\n\n/** @type {Object.<_id: number, props>} */\ninsProps = {};\n\nvar insId = 0;\n\n// [DEBUG]\nvar traceLog = [];\nvar STATE_TEXT = {};\nSTATE_TEXT[STATE_HIDDEN] = 'STATE_HIDDEN';\nSTATE_TEXT[STATE_SHOWING] = 'STATE_SHOWING';\nSTATE_TEXT[STATE_SHOWN] = 'STATE_SHOWN';\nSTATE_TEXT[STATE_HIDING] = 'STATE_HIDING';\n// [/DEBUG]\n\nfunction forceReflow(target) {\n  // Trident and Blink bug (reflow like `offsetWidth` can't update)\n  setTimeout(function () {\n    var parent = target.parentNode,\n        next = target.nextSibling;\n    // It has to be removed first for Blink.\n    parent.insertBefore(parent.removeChild(target), next);\n  }, 0);\n}\nwindow.forceReflow = forceReflow; // [DEBUG/]\n\n/**\n * Set style properties while saving current properties.\n * @param {Element} element - Target element.\n * @param {Object} styleProps - New style properties.\n * @param {(Object|null)} savedStyleProps - Current style properties holder.\n * @param {Array} [propNames] - Names of target properties.\n * @returns {Element} Target element itself.\n */\nfunction setStyle(element, styleProps, savedStyleProps, propNames) {\n  var style = element.style;\n  (propNames || Object.keys(styleProps)).forEach(function (prop) {\n    if (styleProps[prop] != null) {\n      if (savedStyleProps && savedStyleProps[prop] == null) {\n        savedStyleProps[prop] = style[prop];\n      }\n      style[prop] = styleProps[prop];\n      styleProps[prop] = null;\n    }\n  });\n  return element;\n}\n\n/**\n * Restore saved style properties.\n * @param {Element} element - Target element.\n * @param {Object} savedStyleProps - Saved style properties.\n * @param {Array} [propNames] - Names of properties that is restored.\n * @returns {Element} Target element itself.\n */\nfunction restoreStyle(element, savedStyleProps, propNames) {\n  return setStyle(element, savedStyleProps, null, propNames);\n}\n\n/**\n * An object that simulates `DOMRect` to indicate a bounding-box.\n * @typedef {Object} BBox\n * @property {(number|null)} left - document coordinate\n * @property {(number|null)} top - document coordinate\n * @property {(number|null)} right - document coordinate\n * @property {(number|null)} bottom - document coordinate\n * @property {(number|null)} width\n * @property {(number|null)} height\n */\n\n/**\n * Get an element's bounding-box that contains coordinates relative to the element's document or window.\n * @param {Element} element - Target element.\n * @param {Window} [window] - Whether it's relative to the element's window, or document.\n * @returns {(BBox|null)} A bounding-box or null when failed.\n */\nfunction getBBox(element, window) {\n  var rect = element.getBoundingClientRect(),\n      bBox = { left: rect.left, top: rect.top,\n    right: rect.right, bottom: rect.bottom, width: rect.width, height: rect.height };\n  if (window) {\n    bBox.left += window.pageXOffset;\n    bBox.right += window.pageXOffset;\n    bBox.top += window.pageYOffset;\n    bBox.bottom += window.pageYOffset;\n  }\n  return bBox;\n}\nwindow.getBBox = getBBox; // [DEBUG/]\n\nfunction scrollLeft(element, isDoc, window, value) {\n  if (isDoc) {\n    if (value != null) {\n      window.scrollTo(value, window.pageYOffset);\n    }\n    return window.pageXOffset;\n  }\n  if (value != null) {\n    element.scrollLeft = value;\n  }\n  return element.scrollLeft;\n}\nwindow.scrollLeft = scrollLeft; // [DEBUG/]\n\nfunction scrollTop(element, isDoc, window, value) {\n  if (isDoc) {\n    if (value != null) {\n      window.scrollTo(window.pageXOffset, value);\n    }\n    return window.pageYOffset;\n  }\n  if (value != null) {\n    element.scrollTop = value;\n  }\n  return element.scrollTop;\n}\nwindow.scrollTop = scrollTop; // [DEBUG/]\n\nfunction resizeTarget(props, width, height) {\n  var elmTargetBody = props.elmTargetBody;\n\n  var rect = elmTargetBody.getBoundingClientRect();\n  if (Math.abs(rect.width - width) < TOLERANCE && Math.abs(rect.height - height) < TOLERANCE) {\n    return;\n  }\n\n  var targetBodyCmpStyle = props.window.getComputedStyle(elmTargetBody, ''),\n      boxSizing = targetBodyCmpStyle.boxSizing,\n      includeProps = boxSizing === 'border-box' ? [] : boxSizing === 'padding-box' ? ['border'] : ['border', 'padding'],\n      // content-box\n\n  PROP_NAMES = {\n    border: {\n      width: ['borderLeftWidth', 'borderRightWidth'],\n      height: ['borderTopWidth', 'borderBottomWidth']\n    },\n    padding: {\n      width: ['paddingLeft', 'paddingRight'],\n      height: ['paddingTop', 'paddingBottom']\n    }\n  },\n      values = ['width', 'height'].reduce(function (values, dir) {\n    includeProps.forEach(function (part) {\n      PROP_NAMES[part][dir].forEach(function (propName) {\n        values[dir] -= parseFloat(targetBodyCmpStyle[propName]);\n      });\n    });\n    return values;\n  }, { width: width, height: height });\n\n  // Since the `width` and `height` might change each other, fix both.\n  setStyle(elmTargetBody, {\n    // The value might be negative number when size is too small.\n    width: values.width > 0 ? values.width + 'px' : 0,\n    height: values.height > 0 ? values.height + 'px' : 0\n  }, props.savedStyleTargetBody);\n\n  // In some browsers, getComputedStyle might return computed values that is not px instead of used values.\n  var fixStyle = {};\n  rect = elmTargetBody.getBoundingClientRect();\n  if (Math.abs(rect.width - width) >= TOLERANCE) {\n    // [DEBUG]\n    console.warn('[resizeTarget] Incorrect width: ' + rect.width + (' (expected: ' + width + ' passed: ' + values.width + ')'));\n    // [/DEBUG]\n    fixStyle.width = values.width - (rect.width - width) + 'px';\n  }\n  if (rect.height !== height) {\n    // [DEBUG]\n    console.warn('[resizeTarget] Incorrect height: ' + rect.height + (' (expected: ' + height + ' passed: ' + values.height + ')'));\n    // [/DEBUG]\n    fixStyle.height = values.height - (rect.height - height) + 'px';\n  }\n  setStyle(elmTargetBody, fixStyle, props.savedStyleTargetBody);\n}\nwindow.resizeTarget = resizeTarget; // [DEBUG/]\n\n// Trident and Edge bug, width and height are interchanged.\nfunction getDocClientWH(props) {\n  var elmTarget = props.elmTarget,\n      width = elmTarget.clientWidth,\n      height = elmTarget.clientHeight;\n  if (IS_TRIDENT || IS_EDGE) {\n    var targetBodyCmpStyle = props.window.getComputedStyle(props.elmTargetBody, ''),\n        wMode = targetBodyCmpStyle.writingMode || targetBodyCmpStyle['writing-mode'],\n        // Trident bug\n    direction = targetBodyCmpStyle.direction;\n    return wMode === 'tb-rl' || wMode === 'bt-rl' || wMode === 'tb-lr' || wMode === 'bt-lr' || IS_EDGE && (direction === 'ltr' && (wMode === 'vertical-rl' || wMode === 'vertical-lr') || direction === 'rtl' && (wMode === 'vertical-rl' || wMode === 'vertical-lr')) ? { width: height, height: width } : // interchange\n    { width: width, height: height };\n  }\n  return { width: width, height: height };\n}\nwindow.getDocClientWH = getDocClientWH; // [DEBUG/]\n\nfunction restoreScroll(props, element) {\n  traceLog.push('<restoreScroll>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n\n  function scrollElement(element, isDoc, left, top) {\n    try {\n      scrollLeft(element, isDoc, props.window, left);\n      scrollTop(element, isDoc, props.window, top);\n    } catch (error) {/* Something might have been changed, and that can be ignored. */}\n  }\n\n  if (element) {\n    return props.savedElementsScroll.some(function (elementScroll) {\n      if (elementScroll.element === element) {\n        scrollElement(elementScroll.element, elementScroll.isDoc, elementScroll.left, elementScroll.top);\n        return true;\n      }\n      return false;\n    }) ? (traceLog.push('DONE:ELEMENT', '_id:' + props._id, '</restoreScroll>'), true) : ( // [DEBUG/]\n    traceLog.push('NotInTarget', '_id:' + props._id, '</restoreScroll>'), false) // [DEBUG/]\n    ; // eslint-disable-line semi-style\n  }\n  props.savedElementsScroll.forEach(function (elementScroll) {\n    scrollElement(elementScroll.element, elementScroll.isDoc, elementScroll.left, elementScroll.top);\n  });\n  traceLog.push('DONE:ALL', '_id:' + props._id, '</restoreScroll>'); // [DEBUG/]\n  return true;\n}\n\nfunction restoreAccKeys(props) {\n  props.savedElementsAccKeys.forEach(function (elementAccKeys) {\n    try {\n      if (elementAccKeys.tabIndex === false) {\n        elementAccKeys.element.removeAttribute('tabindex');\n      } else if (elementAccKeys.tabIndex != null) {\n        elementAccKeys.element.tabIndex = elementAccKeys.tabIndex;\n      }\n    } catch (error) {/* Something might have been changed, and that can be ignored. */}\n\n    try {\n      if (elementAccKeys.accessKey) {\n        elementAccKeys.element.accessKey = elementAccKeys.accessKey;\n      }\n    } catch (error) {/* Something might have been changed, and that can be ignored. */}\n  });\n}\nwindow.restoreAccKeys = restoreAccKeys; // [DEBUG/]\n\nfunction avoidFocus(props, element) {\n  // [DEBUG]\n  traceLog.push('<avoidFocus>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  traceLog.push('element:' + (element === document ? 'document' : element.tagName || 'UNKNOWN') + ('' + (element.id ? '#' + element.id : '')));\n  // [/DEBUG]\n  if (props.isDoc && element !== element.ownerDocument.body && !(props.elmOverlay.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_CONTAINED_BY) || !props.isDoc && (element === props.elmTargetBody || props.elmTargetBody.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_CONTAINED_BY)) {\n    if (element.blur) {\n      // Trident and Edge don't support SVG#blur\n      element.blur();\n    } else {\n      element.ownerDocument.body.focus();\n    }\n    traceLog.push('DONE', '_id:' + props._id, '</avoidFocus>'); // [DEBUG/]\n    return true;\n  }\n  traceLog.push('NotInTarget', '_id:' + props._id, '</avoidFocus>'); // [DEBUG/]\n  return false;\n}\n\n// Selection.containsNode polyfill for Trident\nfunction selContainsNode(selection, node, partialContainment) {\n  var nodeRange = node.ownerDocument.createRange(),\n      iLen = selection.rangeCount;\n  nodeRange.selectNodeContents(node);\n  for (var i = 0; i < iLen; i++) {\n    var selRange = selection.getRangeAt(i);\n    // Edge bug (Issue #7321753); getRangeAt returns empty (collapsed) range\n    // NOTE: It can not recover when the selection has multiple ranges.\n    if (!selRange.toString().length && selection.toString().length && iLen === 1) {\n      console.log('Edge bug (Issue #7321753)'); // [DEBUG/]\n      selRange.setStart(selection.anchorNode, selection.anchorOffset);\n      selRange.setEnd(selection.focusNode, selection.focusOffset);\n      // Edge doesn't throw when end is upper than start.\n      if (selRange.toString() !== selection.toString()) {\n        selRange.setStart(selection.focusNode, selection.focusOffset);\n        selRange.setEnd(selection.anchorNode, selection.anchorOffset);\n        if (selRange.toString() !== selection.toString()) {\n          throw new Error('Edge bug (Issue #7321753); Couldn\\'t recover');\n        }\n      }\n    }\n    if (partialContainment ? selRange.compareBoundaryPoints(Range.START_TO_END, nodeRange) >= 0 && selRange.compareBoundaryPoints(Range.END_TO_START, nodeRange) <= 0 : selRange.compareBoundaryPoints(Range.START_TO_START, nodeRange) < 0 && selRange.compareBoundaryPoints(Range.END_TO_END, nodeRange) > 0) {\n      return true;\n    }\n  }\n  return false;\n}\nwindow.selContainsNode = selContainsNode; // [DEBUG/]\n\n/**\n * Indicates whether the selection is part of the node or not.\n * @param {Node} node - Target node.\n * @param {Selection} selection - The parsed selection.\n * @returns {boolean} `true` if all ranges of `selection` are part of `node`.\n */\nfunction nodeContainsSel(node, selection) {\n  var nodeRange = node.ownerDocument.createRange(),\n      iLen = selection.rangeCount;\n  nodeRange.selectNode(node);\n  for (var i = 0; i < iLen; i++) {\n    var selRange = selection.getRangeAt(i);\n    if (selRange.compareBoundaryPoints(Range.START_TO_START, nodeRange) < 0 || selRange.compareBoundaryPoints(Range.END_TO_END, nodeRange) > 0) {\n      return false;\n    }\n  }\n  return true;\n}\nwindow.nodeContainsSel = nodeContainsSel; // [DEBUG/]\n\nfunction avoidSelect(props) {\n  traceLog.push('<avoidSelect>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  var selection = ('getSelection' in window ? props.window : props.document).getSelection();\n  // [DEBUG]\n  if (selection.rangeCount) {\n    var start = selection.anchorNode,\n        end = selection.focusNode;\n    if (start && start.nodeType === Node.TEXT_NODE) {\n      start = start.parentNode;\n    }\n    if (end && end.nodeType === Node.TEXT_NODE) {\n      end = end.parentNode;\n    }\n    traceLog.push('start:' + (!start ? 'NONE' : start === document ? 'document' : start.tagName || 'UNKNOWN') + ('' + (start && start.id ? '#' + start.id : '')) + ('(' + selection.anchorOffset + ')') + (',end:' + (!end ? 'NONE' : end === document ? 'document' : end.tagName || 'UNKNOWN')) + ('' + (end && end.id ? '#' + end.id : '')) + ('(' + selection.focusOffset + ')') + (',isCollapsed:' + selection.isCollapsed));\n  } else {\n    traceLog.push('NoRange');\n  }\n  // [/DEBUG]\n  if (selection.rangeCount && (props.isDoc ? !nodeContainsSel(props.elmOverlayBody, selection) : selection.containsNode && (!IS_BLINK || !selection.isCollapsed) // Blink bug, fails with empty string.\n  ? selection.containsNode(props.elmTargetBody, true) : selContainsNode(selection, props.elmTargetBody, true))) {\n    try {\n      selection.removeAllRanges(); // Trident bug?, `Error:800a025e` comes sometime\n    } catch (error) {/* ignore */}\n    props.document.body.focus();\n    // Trident bug? It seems that `focus()` makes selection again.\n    if (selection.rangeCount > 0) {\n      try {\n        selection.removeAllRanges(); // Trident bug?, `Error:800a025e` comes sometime\n      } catch (error) {/* ignore */}\n    }\n    traceLog.push('DONE', '_id:' + props._id, '</avoidSelect>'); // [DEBUG/]\n    return true;\n  }\n  traceLog.push('NoSelection', '_id:' + props._id, '</avoidSelect>'); // [DEBUG/]\n  return false;\n}\n\nfunction barLeft(wMode, direction) {\n  var svgSpec = wMode === 'rl-tb' || wMode === 'tb-rl' || wMode === 'bt-rl' || wMode === 'rl-bt';\n  return IS_TRIDENT && svgSpec || IS_EDGE && (svgSpec || direction === 'rtl' && (wMode === 'horizontal-tb' || wMode === 'vertical-rl') || direction === 'ltr' && wMode === 'vertical-rl');\n}\nwindow.barLeft = barLeft; // [DEBUG/]\n\nfunction barTop(wMode, direction) {\n  var svgSpec = wMode === 'bt-rl' || wMode === 'bt-lr' || wMode === 'lr-bt' || wMode === 'rl-bt';\n  return IS_TRIDENT && svgSpec || IS_EDGE && (svgSpec || direction === 'rtl' && (wMode === 'vertical-lr' || wMode === 'vertical-rl'));\n}\nwindow.barTop = barTop; // [DEBUG/]\n\nfunction disableDocBars(props) {\n  var elmTarget = props.elmTarget,\n      elmTargetBody = props.elmTargetBody,\n      targetBodyRect = elmTargetBody.getBoundingClientRect();\n\n  // Get size of each scrollbar.\n  var clientWH = getDocClientWH(props),\n      barV = -clientWH.width,\n      barH = -clientWH.height; // elmTarget.clientWidth/clientHeight\n  setStyle(elmTarget, { overflow: 'hidden' }, props.savedStyleTarget);\n  clientWH = getDocClientWH(props);\n  barV += clientWH.width;\n  barH += clientWH.height;\n\n  if (barV || barH) {\n    var targetBodyCmpStyle = props.window.getComputedStyle(elmTargetBody, '');\n    var propV = void 0,\n        propH = void 0;\n    // There is no way to get absolute position of document.\n    // We need distance between the document and its window, or a method like `element.screenX`\n    // that gets absolute position of an element.\n    // For the moment, Trident and Edge make a scrollbar at the left/top side when RTL document\n    // or CJK vertical document is rendered.\n    if (IS_TRIDENT || IS_EDGE) {\n      var wMode = targetBodyCmpStyle.writingMode || targetBodyCmpStyle['writing-mode'],\n          // Trident bug\n      direction = targetBodyCmpStyle.direction;\n      if (barV) {\n        propV = barLeft(wMode, direction) ? 'marginLeft' : 'marginRight';\n      }\n      if (barH) {\n        propH = barTop(wMode, direction) ? 'marginTop' : 'marginBottom';\n      }\n    } else {\n      if (barV) {\n        propV = 'marginRight';\n      }\n      if (barH) {\n        propH = 'marginBottom';\n      }\n    }\n\n    var addStyle = {};\n    if (barV) {\n      addStyle[propV] = parseFloat(targetBodyCmpStyle[propV]) + barV + 'px';\n    }\n    if (barH) {\n      addStyle[propH] = parseFloat(targetBodyCmpStyle[propH]) + barH + 'px';\n    }\n    setStyle(elmTargetBody, addStyle, props.savedStyleTargetBody);\n    resizeTarget(props, targetBodyRect.width, targetBodyRect.height);\n\n    // `overflow: 'hidden'` might change scroll.\n    restoreScroll(props, elmTarget);\n    return true;\n  }\n  restoreStyle(elmTarget, props.savedStyleTarget, ['overflow']);\n  return false;\n}\nwindow.disableDocBars = disableDocBars; // [DEBUG/]\n\nfunction _position(props, targetBodyBBox) {\n  var elmTargetBody = props.elmTargetBody,\n      targetBodyCmpStyle = props.window.getComputedStyle(elmTargetBody, ''),\n      elmOverlay = props.elmOverlay,\n      overlayCmpStyle = props.window.getComputedStyle(elmOverlay, ''),\n      overlayBBox = getBBox(elmOverlay, props.window),\n      borders = ['Top', 'Right', 'Bottom', 'Left'].reduce(function (borders, prop) {\n    borders[prop.toLowerCase()] = parseFloat(targetBodyCmpStyle['border' + prop + 'Width']);\n    return borders;\n  }, {}),\n\n\n  // Get distance between document and origin of `elmOverlay`.\n  offset = { left: overlayBBox.left - parseFloat(overlayCmpStyle.left),\n    top: overlayBBox.top - parseFloat(overlayCmpStyle.top) },\n      style = {\n    left: targetBodyBBox.left - offset.left + borders.left + 'px',\n    top: targetBodyBBox.top - offset.top + borders.top + 'px',\n    width: targetBodyBBox.width - borders.left - borders.right + 'px',\n    height: targetBodyBBox.height - borders.top - borders.bottom + 'px'\n  },\n      reValue = /^([\\d.]+)(px|%)$/;\n\n  // border-radius\n  [{ prop: 'TopLeft', hBorder: 'left', vBorder: 'top' }, { prop: 'TopRight', hBorder: 'right', vBorder: 'top' }, { prop: 'BottomRight', hBorder: 'right', vBorder: 'bottom' }, { prop: 'BottomLeft', hBorder: 'left', vBorder: 'bottom' }].forEach(function (corner) {\n    var prop = CSSPrefix.getName('border' + corner.prop + 'Radius'),\n        values = targetBodyCmpStyle[prop].split(' ');\n    var h = values[0],\n        v = values[1] || values[0],\n        matches = reValue.exec(h);\n    h = !matches ? 0 : matches[2] === 'px' ? +matches[1] : matches[1] * targetBodyBBox.width / 100;\n    matches = reValue.exec(v);\n    v = !matches ? 0 : matches[2] === 'px' ? +matches[1] : matches[1] * targetBodyBBox.height / 100;\n\n    h -= borders[corner.hBorder];\n    v -= borders[corner.vBorder];\n    if (h > 0 && v > 0) {\n      style[prop] = h + 'px ' + v + 'px';\n    }\n  });\n\n  setStyle(elmOverlay, style);\n  props.targetBodyBBox = targetBodyBBox;\n}\nwindow.position = _position; // [DEBUG/]\n\nfunction getTargetElements(props) {\n  var elmTargetBody = props.elmTargetBody,\n      elmOverlay = props.elmOverlay,\n      targetElements = [props.elmTarget];\n  if (props.isDoc) {\n    targetElements.push(elmTargetBody);\n    Array.prototype.slice.call(elmTargetBody.childNodes).forEach(function (childNode) {\n      if (childNode.nodeType === Node.ELEMENT_NODE && childNode !== elmOverlay && !mClassList(childNode).contains(STYLE_CLASS) && childNode.id !== FACE_DEFS_ELEMENT_ID) {\n        targetElements.push(childNode);\n        Array.prototype.push.apply(targetElements, childNode.querySelectorAll('*'));\n      }\n    });\n  } else {\n    Array.prototype.push.apply(targetElements, elmTargetBody.querySelectorAll('*'));\n  }\n  return targetElements;\n}\n\nfunction finishShowing(props) {\n  traceLog.push('<finishShowing>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  // blur\n  props.filterElements = null;\n  if (props.options.blur !== false) {\n    var propName = CSSPrefix.getName('filter'),\n        propValue = CSSPrefix.getValue('filter', 'blur(' + props.options.blur + 'px)');\n    if (propValue) {\n      // undefined if no propName\n      // Array of {element: element, savedStyle: {}}\n      var filterElements = props.isDoc ? Array.prototype.slice.call(props.elmTargetBody.childNodes).filter(function (childNode) {\n        return childNode.nodeType === Node.ELEMENT_NODE && childNode !== props.elmOverlay && !mClassList(childNode).contains(STYLE_CLASS) && childNode.id !== FACE_DEFS_ELEMENT_ID;\n      }).map(function (element) {\n        return { element: element, savedStyle: {} };\n      }) : [{ element: props.elmTargetBody, savedStyle: {} }];\n\n      filterElements.forEach(function (filterElement) {\n        var style = {}; // new object for each element.\n        style[propName] = propValue;\n        setStyle(filterElement.element, style, filterElement.savedStyle);\n      });\n      props.filterElements = filterElements;\n    }\n  }\n\n  props.state = STATE_SHOWN;\n  traceLog.push('state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  if (props.options.onShow) {\n    props.options.onShow.call(props.ins);\n  }\n  traceLog.push('_id:' + props._id, '</finishShowing>'); // [DEBUG/]\n}\n\nfunction finishHiding(props, sync) {\n  // sync-mode (`sync` is `true`): Skip restoring active element and finish all immediately.\n  traceLog.push('<finishHiding>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  traceLog.push('sync:' + !!sync); // [DEBUG/]\n  mClassList(props.elmOverlay).add(STYLE_CLASS_HIDE);\n\n  restoreStyle(props.elmTarget, props.savedStyleTarget);\n  restoreStyle(props.elmTargetBody, props.savedStyleTargetBody);\n  props.savedStyleTarget = {};\n  props.savedStyleTargetBody = {};\n\n  restoreAccKeys(props);\n  props.savedElementsAccKeys = [];\n\n  if (!sync && props.isDoc && props.activeElement) {\n    // props.state must be STATE_HIDDEN for avoiding focus.\n    var stateSave = props.state;\n    props.state = STATE_HIDDEN;\n    traceLog.push('[SAVE1]state:' + STATE_TEXT[props.state]); // [DEBUG/]\n    // the event is fired after function exited in some browsers (e.g. Trident).\n    traceLog.push('focusListener:REMOVE'); // [DEBUG/]\n    props.elmTargetBody.removeEventListener('focus', props.focusListener, true);\n    props.activeElement.focus();\n    // Don't change props.state for calling `hide(force)` before `restoreAndFinish` (async-mode)\n    props.state = stateSave;\n    traceLog.push('[SAVE2]state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  }\n  props.activeElement = null;\n\n  // Since `focus()` might scroll, do this after `focus()` and reflow.\n  function restoreAndFinish() {\n    traceLog.push('<finishHiding.restoreAndFinish>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n    props.timerRestoreAndFinish = null;\n    props.state = STATE_HIDDEN;\n    traceLog.push('state:' + STATE_TEXT[props.state]); // [DEBUG/]\n    traceLog.push('focusListener:ADD'); // [DEBUG/]\n    props.elmTargetBody.addEventListener('focus', props.focusListener, true);\n    restoreScroll(props);\n    props.savedElementsScroll = null;\n\n    if (props.options.onHide) {\n      props.options.onHide.call(props.ins);\n    }\n    traceLog.push('_id:' + props._id, '</finishHiding.restoreAndFinish>'); // [DEBUG/]\n  }\n\n  if (props.timerRestoreAndFinish) {\n    traceLog.push('ClearPrevTimer'); // [DEBUG/]\n    clearTimeout(props.timerRestoreAndFinish);\n    props.timerRestoreAndFinish = null;\n  }\n  if (sync) {\n    restoreAndFinish();\n  } else {\n    props.timerRestoreAndFinish = setTimeout(restoreAndFinish, 0);\n  }\n  traceLog.push('_id:' + props._id, '</finishHiding>'); // [DEBUG/]\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {boolean} [force] - Skip effect.\n * @returns {void}\n */\nfunction _show(props, force) {\n  traceLog.push('<show>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  traceLog.push('force:' + !!force); // [DEBUG/]\n\n  function getScroll(elements, fromDoc) {\n\n    function elementCanScroll(element, isDoc) {\n      var cmpStyle = props.window.getComputedStyle(element, ''),\n          tagName = element.nodeName.toLowerCase();\n      return cmpStyle.overflow === 'scroll' || cmpStyle.overflow === 'auto' || cmpStyle.overflowX === 'scroll' || cmpStyle.overflowX === 'auto' || cmpStyle.overflowY === 'scroll' || cmpStyle.overflowY === 'auto' ||\n      // document with `visible` might make scrollbars.\n      isDoc && (cmpStyle.overflow === 'visible' || cmpStyle.overflowX === 'visible' || cmpStyle.overflowY === 'visible') ||\n      // `overflow` of these differs depending on browser.\n      !isDoc && (tagName === 'textarea' || tagName === 'select');\n    }\n\n    var elementsScroll = [];\n    elements.forEach(function (element, i) {\n      var isDoc = fromDoc && i === 0;\n      if (elementCanScroll(element, isDoc)) {\n        elementsScroll.push({\n          element: element, isDoc: isDoc,\n          left: scrollLeft(element, isDoc, props.window),\n          top: scrollTop(element, isDoc, props.window)\n        });\n      }\n    });\n    return elementsScroll;\n  }\n\n  function disableAccKeys(elements, fromDoc) {\n    var savedElementsAccKeys = [];\n    elements.forEach(function (element, i) {\n      if (fromDoc && i === 0) {\n        return;\n      }\n\n      var elementAccKeys = {},\n          tabIndex = element.tabIndex;\n      // In Trident and Edge, `tabIndex` of all elements are `0` or something even if the element is not focusable.\n      if (tabIndex !== -1) {\n        elementAccKeys.element = element;\n        elementAccKeys.tabIndex = element.hasAttribute('tabindex') ? tabIndex : false;\n        element.tabIndex = -1;\n      }\n\n      var accessKey = element.accessKey;\n      if (accessKey) {\n        elementAccKeys.element = element;\n        elementAccKeys.accessKey = accessKey;\n        element.accessKey = '';\n      }\n\n      if (elementAccKeys.element) {\n        savedElementsAccKeys.push(elementAccKeys);\n      }\n    });\n    return savedElementsAccKeys;\n  }\n\n  if (props.state === STATE_SHOWN || props.state === STATE_SHOWING && !force || props.state !== STATE_SHOWING && props.options.onBeforeShow && props.options.onBeforeShow.call(props.ins) === false) {\n    traceLog.push('CANCEL', '</show>'); // [DEBUG/]\n    return;\n  }\n\n  if (props.state === STATE_HIDDEN) {\n    var elmOverlay = props.elmOverlay,\n        elmOverlayClassList = mClassList(elmOverlay);\n    props.document.body.appendChild(elmOverlay); // Move to last (for same z-index)\n    var targetElements = getTargetElements(props);\n    window.targetElements = targetElements; // [DEBUG/]\n\n    elmOverlayClassList.remove(STYLE_CLASS_HIDE); // Before `getBoundingClientRect` (`position`).\n    if (!props.isDoc) {\n      var elmTargetBody = props.elmTargetBody;\n      if (props.window.getComputedStyle(elmTargetBody, '').display === 'inline') {\n        setStyle(elmTargetBody, { display: 'inline-block' }, props.savedStyleTargetBody);\n      }\n      _position(props, getBBox(elmTargetBody, props.window));\n    }\n\n    props.savedElementsScroll = getScroll(targetElements, props.isDoc);\n    props.disabledDocBars = false;\n    // savedElementsScroll is empty when document is disconnected.\n    if (props.isDoc && props.savedElementsScroll.length && props.savedElementsScroll[0].isDoc) {\n      props.disabledDocBars = disableDocBars(props);\n    }\n    props.savedElementsAccKeys = disableAccKeys(targetElements, props.isDoc);\n    props.activeElement = props.document.activeElement;\n    if (props.activeElement) {\n      avoidFocus(props, props.activeElement);\n    }\n    avoidSelect(props);\n    elmOverlay.offsetWidth; /* force reflow */ // eslint-disable-line no-unused-expressions\n\n    if (props.options.onPosition) {\n      props.options.onPosition.call(props.ins);\n    }\n  }\n\n  props.transition.on(force);\n  props.state = STATE_SHOWING;\n  traceLog.push('state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  if (force) {\n    finishShowing(props);\n  }\n  traceLog.push('_id:' + props._id, '</show>'); // [DEBUG/]\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {boolean} [force] - Skip effect.\n * @param {boolean} [sync] - sync-mode\n * @returns {void}\n */\nfunction _hide(props, force, sync) {\n  // sync-mode (both `force` and `sync` are `true`)\n  traceLog.push('<hide>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  traceLog.push('force:' + !!force); // [DEBUG/]\n  traceLog.push('sync:' + !!sync); // [DEBUG/]\n  if (props.state === STATE_HIDDEN || props.state === STATE_HIDING && !force || props.state !== STATE_HIDING && props.options.onBeforeHide && props.options.onBeforeHide.call(props.ins) === false) {\n    traceLog.push('CANCEL', '</hide>'); // [DEBUG/]\n    return;\n  }\n\n  // blur\n  if (props.filterElements) {\n    props.filterElements.forEach(function (filterElement) {\n      restoreStyle(filterElement.element, filterElement.savedStyle);\n    });\n    props.filterElements = null;\n  }\n\n  // In Gecko, hidden element can be activeElement.\n  var element = props.document.activeElement;\n  if (element && element !== element.ownerDocument.body && props.elmOverlay.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n    if (element.blur) {\n      // Trident and Edge don't support SVG#blur\n      element.blur();\n    } else {\n      element.ownerDocument.body.focus();\n    }\n  }\n\n  props.transition.off(force);\n  props.state = STATE_HIDING;\n  traceLog.push('state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  if (force) {\n    finishHiding(props, sync);\n  }\n  traceLog.push('_id:' + props._id, '</hide>'); // [DEBUG/]\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {Object} newOptions - New options.\n * @returns {void}\n */\nfunction _setOptions(props, newOptions) {\n  var options = props.options;\n\n  // face\n  if (newOptions.hasOwnProperty('face') && (newOptions.face == null ? void 0 : newOptions.face) !== options.face) {\n    var elmOverlayBody = props.elmOverlayBody;\n    // Clear\n    while (elmOverlayBody.firstChild) {\n      elmOverlayBody.removeChild(elmOverlayBody.firstChild);\n    }\n    if (newOptions.face === false) {\n      // No face\n      options.face = false;\n    } else if (newOptions.face && newOptions.face.nodeType === Node.ELEMENT_NODE) {\n      // Specific face\n      options.face = newOptions.face;\n      elmOverlayBody.appendChild(newOptions.face);\n    } else if (newOptions.face == null) {\n      // Builtin face\n      options.face = void 0;\n    }\n  }\n\n  // duration\n  if (isFinite(newOptions.duration) && newOptions.duration !== options.duration) {\n    options.duration = newOptions.duration;\n    props.elmOverlay.style[CSSPrefix.getName('transitionDuration')] = newOptions.duration === DURATION ? '' : newOptions.duration + 'ms';\n    props.transition.duration = newOptions.duration + 'ms';\n  }\n\n  // blur\n  if (isFinite(newOptions.blur) || newOptions.blur === false) {\n    options.blur = newOptions.blur;\n  }\n\n  // style\n  if (isObject(newOptions.style)) {\n    setStyle(props.elmOverlay, newOptions.style);\n  }\n\n  // Event listeners\n  ['onShow', 'onHide', 'onBeforeShow', 'onBeforeHide', 'onPosition'].forEach(function (option) {\n    if (typeof newOptions[option] === 'function') {\n      options[option] = newOptions[option];\n    } else if (newOptions.hasOwnProperty(option) && newOptions[option] == null) {\n      options[option] = void 0;\n    }\n  });\n}\n\nfunction scroll(props, target, dirLeft, value) {\n  var isDoc = void 0,\n\n  // To return undefined\n  curValue = void 0; // eslint-disable-line prefer-const\n\n  if (target) {\n    var targetElements = getTargetElements(props);\n    if (targetElements.indexOf(target) === -1) {\n      return curValue;\n    } // return undefined\n    isDoc = target.nodeName.toLowerCase() === 'html';\n  } else {\n    target = props.elmTarget;\n    isDoc = props.isDoc;\n  }\n\n  var elementScroll = value != null && props.savedElementsScroll && (props.savedElementsScroll.find ? props.savedElementsScroll.find(function (elementScroll) {\n    return elementScroll.element === target;\n  }) : function (elementsScroll) {\n    var found = void 0;\n    elementsScroll.some(function (elementScroll) {\n      if (elementScroll.element === target) {\n        found = elementScroll;\n        return true;\n      }\n      return false;\n    });\n    return found;\n  }(props.savedElementsScroll));\n\n  curValue = (dirLeft ? scrollLeft : scrollTop)(target, isDoc, props.window, value);\n  if (elementScroll) {\n    elementScroll[dirLeft ? 'left' : 'top'] = curValue;\n  }\n  return curValue;\n}\n\nvar PlainOverlay = function () {\n  /**\n   * Create a `PlainOverlay` instance.\n   * @param {Element} [target] - Target element.\n   * @param {Object} [options] - Options.\n   */\n  function PlainOverlay(target, options) {\n    _classCallCheck(this, PlainOverlay);\n\n    /**\n     * @param {Object} [target] - Element or something that is checked.\n     * @returns {(Element|null)} Valid element or null.\n     */\n    function getTarget(target) {\n      var validElement = void 0;\n      if (!target) {\n        validElement = document.documentElement; // documentElement of current document\n      } else if (target.nodeType) {\n        if (target.nodeType === Node.DOCUMENT_NODE) {\n          validElement = target.documentElement; // documentElement of target document\n        } else if (target.nodeType === Node.ELEMENT_NODE) {\n          var nodeName = target.nodeName.toLowerCase();\n          validElement = nodeName === 'body' ? target.ownerDocument.documentElement : // documentElement of target body\n          nodeName === 'iframe' || nodeName === 'frame' ? target.contentDocument.documentElement : // documentElement of target frame\n          target;\n        }\n        if (!validElement) {\n          throw new Error('This element is not accepted.');\n        }\n      } else if (target === target.window) {\n        validElement = target.document.documentElement; // documentElement of target window\n      }\n      return validElement;\n    }\n\n    var props = {\n      ins: this,\n      options: { // Initial options (not default)\n        face: false, // Initial state.\n        duration: DURATION, // Initial state.\n        blur: false // Initial state.\n      },\n      state: STATE_HIDDEN,\n      savedStyleTarget: {},\n      savedStyleTargetBody: {},\n      blockingDisabled: false\n    };\n\n    Object.defineProperty(this, '_id', { value: ++insId });\n    props._id = this._id;\n    insProps[this._id] = props;\n\n    if (arguments.length === 1) {\n      if (!(props.elmTarget = getTarget(target))) {\n        if (!isObject(target)) {\n          throw new Error('Invalid argument.');\n        }\n        props.elmTarget = document.documentElement; // documentElement of current document\n        options = target;\n      }\n    } else if (!(props.elmTarget = getTarget(target))) {\n      throw new Error('This target is not accepted.');\n    }\n    if (!options) {\n      options = {};\n    } else if (!isObject(options)) {\n      throw new Error('Invalid options.');\n    }\n\n    props.isDoc = props.elmTarget.nodeName.toLowerCase() === 'html';\n    var elmDocument = props.document = props.elmTarget.ownerDocument;\n    props.window = elmDocument.defaultView;\n    var elmTargetBody = props.elmTargetBody = props.isDoc ? elmDocument.body : props.elmTarget;\n\n    // Setup window\n    if (!elmDocument.getElementById(STYLE_ELEMENT_ID)) {\n      var head = elmDocument.getElementsByTagName('head')[0] || elmDocument.documentElement,\n          sheet = head.insertBefore(elmDocument.createElement('style'), head.firstChild);\n      sheet.type = 'text/css';\n      sheet.id = STYLE_ELEMENT_ID;\n      sheet.textContent = CSS_TEXT;\n      if (IS_TRIDENT || IS_EDGE) {\n        forceReflow(sheet);\n      } // Trident bug\n    }\n\n    // elmOverlay\n    var elmOverlay = props.elmOverlay = elmDocument.createElement('div'),\n        elmOverlayClassList = mClassList(elmOverlay);\n    elmOverlayClassList.add(STYLE_CLASS, STYLE_CLASS_HIDE);\n    if (props.isDoc) {\n      elmOverlayClassList.add(STYLE_CLASS_DOC);\n    }\n\n    // TimedTransition\n    props.transition = new TimedTransition(elmOverlay, {\n      procToOn: function procToOn(force) {\n        var elmOverlayClassList = mClassList(elmOverlay);\n        elmOverlayClassList.toggle(STYLE_CLASS_FORCE, !!force);\n        elmOverlayClassList.add(STYLE_CLASS_SHOW);\n      },\n      procToOff: function procToOff(force) {\n        var elmOverlayClassList = mClassList(elmOverlay);\n        elmOverlayClassList.toggle(STYLE_CLASS_FORCE, !!force);\n        elmOverlayClassList.remove(STYLE_CLASS_SHOW);\n      },\n      // for setting before element online\n      property: 'opacity',\n      duration: DURATION + 'ms'\n    });\n    elmOverlay.addEventListener('timedTransitionEnd', function (event) {\n      if (event.target === elmOverlay && event.propertyName === 'opacity') {\n        if (props.state === STATE_SHOWING) {\n          finishShowing(props);\n        } else if (props.state === STATE_HIDING) {\n          finishHiding(props);\n        }\n      }\n    }, true);\n\n    (props.isDoc ? props.window : elmTargetBody).addEventListener('scroll', function (event) {\n      // [DEBUG]\n      traceLog.push('<scroll-event>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n      traceLog.push('target:' + (event.target === document ? 'document' : event.target.tagName || 'UNKNOWN') + ('' + (event.target.id ? '#' + event.target.id : '')));\n      // [/DEBUG]\n      var target = event.target;\n      if (props.state !== STATE_HIDDEN && !props.blockingDisabled && restoreScroll(props, props.isDoc && (target === props.window || target === props.document || target === props.elmTargetBody) ? props.elmTarget : target)) {\n        traceLog.push('AVOIDED'); // [DEBUG/]\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n      traceLog.push('_id:' + props._id, '</scroll-event>'); // [DEBUG/]\n    }, true);\n\n    // props.state can't control the listener\n    // because the event is fired after flow function exited in some browsers (e.g. Trident).\n    props.focusListener = function (event) {\n      // [DEBUG]\n      traceLog.push('<focusListener>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n      traceLog.push('target:' + (event.target === document ? 'document' : event.target.tagName || 'UNKNOWN') + ('' + (event.target.id ? '#' + event.target.id : '')));\n      // [/DEBUG]\n      if (props.state !== STATE_HIDDEN && !props.blockingDisabled && avoidFocus(props, event.target)) {\n        traceLog.push('AVOIDED'); // [DEBUG/]\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n      traceLog.push('_id:' + props._id, '</focusListener>'); // [DEBUG/]\n    };\n    elmTargetBody.addEventListener('focus', props.focusListener, true);\n\n    (function (listener) {\n      // simulation \"text-select\" event\n      ['keyup', 'mouseup'].forEach(function (type) {\n        // To listen to keydown in the target and keyup in outside, it is window, not `elmTargetBody`.\n        props.window.addEventListener(type, listener, true);\n      });\n    })(function (event) {\n      traceLog.push('<text-select-event>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n      if (props.state !== STATE_HIDDEN && !props.blockingDisabled && avoidSelect(props)) {\n        traceLog.push('AVOIDED'); // [DEBUG/]\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n      traceLog.push('_id:' + props._id, '</text-select-event>'); // [DEBUG/]\n    });\n\n    // Gecko bug, multiple calling (parallel) by `requestAnimationFrame`.\n    props.resizing = false;\n    props.window.addEventListener('resize', AnimEvent.add(function () {\n      if (props.resizing) {\n        console.warn('`resize` event listener is already running.'); // [DEBUG/]\n        return;\n      }\n      props.resizing = true;\n      if (props.state !== STATE_HIDDEN) {\n        if (props.isDoc) {\n          if (props.savedElementsScroll.length && props.savedElementsScroll[0].isDoc) {\n            if (props.disabledDocBars) {\n              // Restore DocBars\n              console.log('Restore DocBars'); // [DEBUG/]\n              restoreStyle(props.elmTarget, props.savedStyleTarget, ['overflow']);\n              restoreStyle(elmTargetBody, props.savedStyleTargetBody, ['marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'width', 'height']);\n            }\n            console.log('disableDocBars'); // [DEBUG/]\n            props.disabledDocBars = disableDocBars(props);\n          }\n        } else {\n          var bBox = getBBox(elmTargetBody, props.window),\n              lastBBox = props.targetBodyBBox;\n          if (bBox.left !== lastBBox.left || bBox.top !== lastBBox.top || bBox.width !== lastBBox.width || bBox.height !== lastBBox.height) {\n            console.log('Update position'); // [DEBUG/]\n            _position(props, bBox);\n          }\n        }\n        if (props.options.onPosition) {\n          props.options.onPosition.call(props.ins);\n        }\n      }\n      props.resizing = false;\n    }), true);\n\n    // Avoid scroll on touch device\n    elmOverlay.addEventListener('touchmove', function (event) {\n      if (props.state !== STATE_HIDDEN) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    }, true);\n\n    // elmOverlayBody\n    (props.elmOverlayBody = elmOverlay.appendChild(elmDocument.createElement('div'))).className = STYLE_CLASS_BODY;\n\n    elmDocument.body.appendChild(elmOverlay);\n\n    // Default options\n    if (!options.hasOwnProperty('face')) {\n      options.face = null;\n    }\n\n    _setOptions(props, options);\n  }\n\n  /**\n   * @param {Object} options - New options.\n   * @returns {PlainOverlay} Current instance itself.\n   */\n\n\n  _createClass(PlainOverlay, [{\n    key: 'setOptions',\n    value: function setOptions(options) {\n      if (isObject(options)) {\n        _setOptions(insProps[this._id], options);\n      }\n      return this;\n    }\n\n    /**\n     * Show the overlay.\n     * @param {boolean} [force] - Show it immediately without effect.\n     * @param {Object} [options] - New options.\n     * @returns {PlainOverlay} Current instance itself.\n     */\n\n  }, {\n    key: 'show',\n    value: function show(force, options) {\n      if (arguments.length < 2 && typeof force !== 'boolean') {\n        options = force;\n        force = false;\n      }\n\n      this.setOptions(options);\n      _show(insProps[this._id], force);\n      return this;\n    }\n\n    /**\n     * Hide the overlay.\n     * @param {boolean} [force] - Hide it immediately without effect.\n     * @param {boolean} [sync] - sync-mode\n     * @returns {PlainOverlay} Current instance itself.\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(force, sync) {\n      // sync-mode (both `force` and `sync` are `true`)\n      _hide(insProps[this._id], force, sync);\n      return this;\n    }\n  }, {\n    key: 'scrollLeft',\n    value: function scrollLeft(value, target) {\n      return scroll(insProps[this._id], target, true, value);\n    }\n  }, {\n    key: 'scrollTop',\n    value: function scrollTop(value, target) {\n      return scroll(insProps[this._id], target, false, value);\n    }\n  }, {\n    key: 'position',\n    value: function position() {\n      var props = insProps[this._id];\n      if (props.state !== STATE_HIDDEN) {\n        if (!props.isDoc) {\n          _position(props, getBBox(props.elmTargetBody, props.window));\n        }\n        if (props.options.onPosition) {\n          props.options.onPosition.call(props.ins);\n        }\n      }\n      return this;\n    }\n  }, {\n    key: 'state',\n    get: function get() {\n      return insProps[this._id].state;\n    }\n  }, {\n    key: 'style',\n    get: function get() {\n      return insProps[this._id].elmOverlay.style;\n    }\n  }, {\n    key: 'blockingDisabled',\n    get: function get() {\n      return insProps[this._id].blockingDisabled;\n    },\n    set: function set(value) {\n      if (typeof value === 'boolean') {\n        insProps[this._id].blockingDisabled = value;\n      }\n    }\n  }, {\n    key: 'face',\n    get: function get() {\n      return insProps[this._id].options.face;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { face: value });\n    }\n  }, {\n    key: 'duration',\n    get: function get() {\n      return insProps[this._id].options.duration;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { duration: value });\n    }\n  }, {\n    key: 'blur',\n    get: function get() {\n      return insProps[this._id].options.blur;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { blur: value });\n    }\n  }, {\n    key: 'onShow',\n    get: function get() {\n      return insProps[this._id].options.onShow;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onShow: value });\n    }\n  }, {\n    key: 'onHide',\n    get: function get() {\n      return insProps[this._id].options.onHide;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onHide: value });\n    }\n  }, {\n    key: 'onBeforeShow',\n    get: function get() {\n      return insProps[this._id].options.onBeforeShow;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onBeforeShow: value });\n    }\n  }, {\n    key: 'onBeforeHide',\n    get: function get() {\n      return insProps[this._id].options.onBeforeHide;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onBeforeHide: value });\n    }\n  }, {\n    key: 'onPosition',\n    get: function get() {\n      return insProps[this._id].options.onPosition;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onPosition: value });\n    }\n  }], [{\n    key: 'show',\n    value: function show(target, options) {\n      return new PlainOverlay(target, options).show();\n    }\n  }, {\n    key: 'STATE_HIDDEN',\n    get: function get() {\n      return STATE_HIDDEN;\n    }\n  }, {\n    key: 'STATE_SHOWING',\n    get: function get() {\n      return STATE_SHOWING;\n    }\n  }, {\n    key: 'STATE_SHOWN',\n    get: function get() {\n      return STATE_SHOWN;\n    }\n  }, {\n    key: 'STATE_HIDING',\n    get: function get() {\n      return STATE_HIDING;\n    }\n  }]);\n\n  return PlainOverlay;\n}();\n\nPlainOverlay.limit = true;\n\n// [DEBUG]\nPlainOverlay.insProps = insProps;\nPlainOverlay.traceLog = traceLog;\nPlainOverlay.STATE_TEXT = STATE_TEXT;\nPlainOverlay.IS_TRIDENT = IS_TRIDENT;\nPlainOverlay.IS_EDGE = IS_EDGE;\nPlainOverlay.IS_WEBKIT = IS_WEBKIT;\nPlainOverlay.IS_BLINK = IS_BLINK;\nPlainOverlay.IS_GECKO = IS_GECKO;\n// [/DEBUG]\n\nexport default PlainOverlay;","/* ================================================\n        DON'T MANUALLY EDIT THIS FILE\n================================================ */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * PointerEvent\n * https://github.com/anseki/pointer-event\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nimport AnimEvent from 'anim-event';\n\nvar MOUSE_EMU_INTERVAL = 400; // Avoid mouse events emulation\n\n\n// Support options for addEventListener\nvar passiveSupported = false;\ntry {\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passiveSupported = true;\n    }\n  }));\n} catch (error) {} /* ignore */\n\n/**\n * addEventListener with specific option.\n * @param {Element} target - An event-target element.\n * @param {string} type - The event type to listen for.\n * @param {function} listener - The EventListener.\n * @param {Object} options - An options object.\n * @returns {void}\n */\nfunction addEventListenerWithOptions(target, type, listener, options) {\n  // When `passive` is not supported, consider that the `useCapture` is supported instead of\n  // `options` (i.e. options other than the `passive` also are not supported).\n  target.addEventListener(type, listener, passiveSupported ? options : options.capture);\n}\n\n/**\n * Get Touch instance in list.\n * @param {Touch[]} touches - An Array or TouchList instance.\n * @param {number} id - Touch#identifier\n * @returns {(Touch|null)} - A found Touch instance.\n */\nfunction getTouchById(touches, id) {\n  if (touches != null && id != null) {\n    for (var i = 0; i < touches.length; i++) {\n      if (touches[i].identifier === id) {\n        return touches[i];\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Object} xy - Something that might have clientX and clientY.\n * @returns {boolean} - `true` if it has valid clientX and clientY.\n */\nfunction hasXY(xy) {\n  return xy && typeof xy.clientX === 'number' && typeof xy.clientY === 'number';\n}\n\n// Gecko, Trident pick drag-event of some elements such as img, a, etc.\nfunction dragstart(event) {\n  event.preventDefault();\n}\n\nvar PointerEvent = function () {\n  /**\n   * Create a `PointerEvent` instance.\n   * @param {Object} [options] - Options\n   */\n  function PointerEvent(options) {\n    var _this = this;\n\n    _classCallCheck(this, PointerEvent);\n\n    this.startHandlers = {};\n    this.lastHandlerId = 0;\n    this.curPointerClass = null;\n    this.curTouchId = null;\n    this.lastPointerXY = { clientX: 0, clientY: 0 };\n    this.lastTouchTime = 0;\n\n    // Options\n    this.options = { // Default\n      preventDefault: true,\n      stopPropagation: true\n    };\n    if (options) {\n      ['preventDefault', 'stopPropagation'].forEach(function (option) {\n        if (typeof options[option] === 'boolean') {\n          _this.options[option] = options[option];\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {function} startHandler - This is called with pointerXY when it starts. This returns boolean.\n   * @returns {number} handlerId which is used for adding/removing to element.\n   */\n\n\n  _createClass(PointerEvent, [{\n    key: 'regStartHandler',\n    value: function regStartHandler(startHandler) {\n      var that = this;\n      that.startHandlers[++that.lastHandlerId] = function (event) {\n        var pointerClass = event.type === 'mousedown' ? 'mouse' : 'touch',\n            now = Date.now();\n        var pointerXY = void 0,\n            touchId = void 0;\n\n        if (pointerClass === 'touch') {\n          that.lastTouchTime = now; // Avoid mouse events emulation\n          pointerXY = event.changedTouches[0];\n          touchId = event.changedTouches[0].identifier;\n        } else {\n          // Avoid mouse events emulation\n          if (now - that.lastTouchTime < MOUSE_EMU_INTERVAL) {\n            return;\n          }\n          pointerXY = event;\n        }\n        if (!hasXY(pointerXY)) {\n          throw new Error('No clientX/clientY');\n        }\n\n        // It is new one even if those are 'mouse' or ID is same, then cancel current one.\n        if (that.curPointerClass) {\n          that.cancel();\n        }\n\n        if (startHandler.call(that, pointerXY)) {\n          that.curPointerClass = pointerClass;\n          that.curTouchId = pointerClass === 'touch' ? touchId : null;\n          that.lastPointerXY.clientX = pointerXY.clientX;\n          that.lastPointerXY.clientY = pointerXY.clientY;\n          if (that.options.preventDefault) {\n            event.preventDefault();\n          }\n          if (that.options.stopPropagation) {\n            event.stopPropagation();\n          }\n        }\n      };\n      return that.lastHandlerId;\n    }\n\n    /**\n     * @param {number} handlerId - An ID which was returned by regStartHandler.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unregStartHandler',\n    value: function unregStartHandler(handlerId) {\n      delete this.startHandlers[handlerId];\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {number} handlerId - An ID which was returned by regStartHandler.\n     * @returns {number} handlerId which was passed.\n     */\n\n  }, {\n    key: 'addStartHandler',\n    value: function addStartHandler(element, handlerId) {\n      if (!this.startHandlers[handlerId]) {\n        throw new Error('Invalid handlerId: ' + handlerId);\n      }\n      addEventListenerWithOptions(element, 'mousedown', this.startHandlers[handlerId], { capture: false, passive: false });\n      addEventListenerWithOptions(element, 'touchstart', this.startHandlers[handlerId], { capture: false, passive: false });\n      addEventListenerWithOptions(element, 'dragstart', dragstart, { capture: false, passive: false });\n      return handlerId;\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {number} handlerId - An ID which was returned by regStartHandler.\n     * @returns {number} handlerId which was passed.\n     */\n\n  }, {\n    key: 'removeStartHandler',\n    value: function removeStartHandler(element, handlerId) {\n      if (!this.startHandlers[handlerId]) {\n        throw new Error('Invalid handlerId: ' + handlerId);\n      }\n      element.removeEventListener('mousedown', this.startHandlers[handlerId], false);\n      element.removeEventListener('touchstart', this.startHandlers[handlerId], false);\n      element.removeEventListener('dragstart', dragstart, false);\n      return handlerId;\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {function} moveHandler - This is called with pointerXY when it moves.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addMoveHandler',\n    value: function addMoveHandler(element, moveHandler) {\n      var that = this;\n      var wrappedHandler = AnimEvent.add(function (event) {\n        var pointerClass = event.type === 'mousemove' ? 'mouse' : 'touch';\n\n        // Avoid mouse events emulation\n        if (pointerClass === 'touch') {\n          that.lastTouchTime = Date.now();\n        }\n\n        if (pointerClass === that.curPointerClass) {\n          var pointerXY = pointerClass === 'touch' ? getTouchById(event.changedTouches, that.curTouchId) : event;\n          if (hasXY(pointerXY)) {\n            if (pointerXY.clientX !== that.lastPointerXY.clientX || pointerXY.clientY !== that.lastPointerXY.clientY) {\n              that.move(pointerXY);\n            }\n            if (that.options.preventDefault) {\n              event.preventDefault();\n            }\n            if (that.options.stopPropagation) {\n              event.stopPropagation();\n            }\n          }\n        }\n      });\n      addEventListenerWithOptions(element, 'mousemove', wrappedHandler, { capture: false, passive: false });\n      addEventListenerWithOptions(element, 'touchmove', wrappedHandler, { capture: false, passive: false });\n      that.curMoveHandler = moveHandler;\n    }\n\n    /**\n     * @param {{clientX, clientY}} [pointerXY] - This might be MouseEvent, Touch of TouchEvent or Object.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'move',\n    value: function move(pointerXY) {\n      if (hasXY(pointerXY)) {\n        this.lastPointerXY.clientX = pointerXY.clientX;\n        this.lastPointerXY.clientY = pointerXY.clientY;\n      }\n      if (this.curMoveHandler) {\n        this.curMoveHandler(this.lastPointerXY);\n      }\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {function} endHandler - This is called with pointerXY when it ends.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addEndHandler',\n    value: function addEndHandler(element, endHandler) {\n      var that = this;\n      function wrappedHandler(event) {\n        var pointerClass = event.type === 'mouseup' ? 'mouse' : 'touch';\n\n        // Avoid mouse events emulation\n        if (pointerClass === 'touch') {\n          that.lastTouchTime = Date.now();\n        }\n\n        if (pointerClass === that.curPointerClass) {\n          var pointerXY = pointerClass === 'touch' ? getTouchById(event.changedTouches, that.curTouchId) || (\n          // It might have been removed from `touches` even if it is not in `changedTouches`.\n          getTouchById(event.touches, that.curTouchId) ? null : {}) : // `{}` means matching\n          event;\n          if (pointerXY) {\n            that.end(pointerXY);\n            if (that.options.preventDefault) {\n              event.preventDefault();\n            }\n            if (that.options.stopPropagation) {\n              event.stopPropagation();\n            }\n          }\n        }\n      }\n      addEventListenerWithOptions(element, 'mouseup', wrappedHandler, { capture: false, passive: false });\n      addEventListenerWithOptions(element, 'touchend', wrappedHandler, { capture: false, passive: false });\n      that.curEndHandler = endHandler;\n    }\n\n    /**\n     * @param {{clientX, clientY}} [pointerXY] - This might be MouseEvent, Touch of TouchEvent or Object.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'end',\n    value: function end(pointerXY) {\n      if (hasXY(pointerXY)) {\n        this.lastPointerXY.clientX = pointerXY.clientX;\n        this.lastPointerXY.clientY = pointerXY.clientY;\n      }\n      if (this.curEndHandler) {\n        this.curEndHandler(this.lastPointerXY);\n      }\n      this.curPointerClass = this.curTouchId = null;\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {function} cancelHandler - This is called when it cancels.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addCancelHandler',\n    value: function addCancelHandler(element, cancelHandler) {\n      var that = this;\n      function wrappedHandler(event) {\n        /*\n          Now, this is fired by touchcancel only, but it might be fired even if curPointerClass is mouse.\n        */\n        // const pointerClass = 'touch';\n\n        that.lastTouchTime = Date.now(); // Avoid mouse events emulation\n\n        if (that.curPointerClass != null) {\n          var pointerXY = getTouchById(event.changedTouches, that.curTouchId) || (\n          // It might have been removed from `touches` even if it is not in `changedTouches`.\n          getTouchById(event.touches, that.curTouchId) ? null : {}); // `{}` means matching\n          if (pointerXY) {\n            that.cancel();\n          }\n        }\n      }\n      addEventListenerWithOptions(element, 'touchcancel', wrappedHandler, { capture: false, passive: false });\n      that.curCancelHandler = cancelHandler;\n    }\n\n    /**\n     * @returns {void}\n     */\n\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this.curCancelHandler) {\n        this.curCancelHandler();\n      }\n      this.curPointerClass = this.curTouchId = null;\n    }\n  }], [{\n    key: 'addEventListenerWithOptions',\n    get: function get() {\n      return addEventListenerWithOptions;\n    }\n  }]);\n\n  return PointerEvent;\n}();\n\nexport default PointerEvent;","/* ================================================\n        DON'T MANUALLY EDIT THIS FILE\n================================================ */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * TimedTransition\n * https://github.com/anseki/timed-transition\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nimport CSSPrefix from 'cssprefix';\n\nvar STATE_STOPPED = 0,\n    STATE_DELAYING = 1,\n    STATE_PLAYING = 2,\n    PREFIX = 'timed',\n    EVENT_TYPE_RUN = PREFIX + 'TransitionRun',\n    EVENT_TYPE_START = PREFIX + 'TransitionStart',\n    EVENT_TYPE_END = PREFIX + 'TransitionEnd',\n    EVENT_TYPE_CANCEL = PREFIX + 'TransitionCancel',\n    IS_EDGE = '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style && !window.navigator.msPointerEnabled,\n    isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && window.isFinite(value);\n},\n\n\n/**\n * An object that has properties of instance.\n * @typedef {Object} props\n * @property {Object} options - Options.\n * @property {Element} element - Target element.\n * @property {Window} window - Window that contains target element.\n * @property {number} duration - Milliseconds from `transition-duration`.\n * @property {number} delay - Milliseconds from `transition-delay`.\n * @property {number} state - Current state.\n * @property {boolean} isOn - `on` was called and `off` is not called yet. It is changed by only on/off.\n * @property {number} runTime - 0, or Date.now() when EVENT_TYPE_RUN.\n * @property {number} startTime - 0, or Date.now() when EVENT_TYPE_START. It might not be runTime + delay.\n * @property {number} currentPosition - A time elapsed from initial state, in milliseconds.\n * @property {boolean} isReversing - The current playing is reversing when STATE_PLAYING.\n * @property {number} timer - Timer ID.\n */\n\n/** @type {Object.<_id: number, props>} */\ninsProps = {};\n\nvar insId = 0;\n\n/**\n * @param {props} props - `props` of instance.\n * @param {string} type - One of EVENT_TYPE_*.\n * @returns {void}\n */\nfunction fireEvent(props, type) {\n  var initTime = Math.min(Math.max(-props.delay, 0), props.duration),\n      elapsedTime = (initTime + (\n  // The value for transitionend might NOT be transition-duration. (csswg.org may be wrong)\n  (type === EVENT_TYPE_END || type === EVENT_TYPE_CANCEL) && props.startTime ? Date.now() - props.startTime : 0)) / 1000;\n\n  var event = void 0;\n  try {\n    event = new props.window.TransitionEvent(type, {\n      propertyName: props.options.property,\n      pseudoElement: props.options.pseudoElement,\n      elapsedTime: elapsedTime,\n      bubbles: true,\n      cancelable: false\n    });\n    // Edge bug, can't set pseudoElement\n    if (IS_EDGE) {\n      event.pseudoElement = props.options.pseudoElement;\n    }\n  } catch (error) {\n    event = props.window.document.createEvent('TransitionEvent');\n    event.initTransitionEvent(type, true, false, props.options.property, elapsedTime);\n    event.pseudoElement = props.options.pseudoElement;\n  }\n  event.timedTransition = props.ins;\n  props.element.dispatchEvent(event);\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @returns {void}\n */\nfunction fixCurrentPosition(props) {\n  if (props.state !== STATE_PLAYING) {\n    return;\n  }\n  var playingTime = Date.now() - props.startTime;\n  props.currentPosition = props.isOn ? Math.min(props.currentPosition + playingTime, props.duration) : Math.max(props.currentPosition - playingTime, 0);\n}\n\n/**\n * Finish the \"on/off\" immediately by isOn.\n * @param {props} props - `props` of instance.\n * @returns {void}\n */\nfunction finishAll(props) {\n  props.state = STATE_STOPPED;\n  props.runTime = 0;\n  props.startTime = 0;\n  props.currentPosition = props.isOn ? props.duration : 0;\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @returns {void}\n */\nfunction finishPlaying(props) {\n  if (props.state !== STATE_PLAYING) {\n    return;\n  }\n\n  props.state = STATE_STOPPED;\n  fireEvent(props, EVENT_TYPE_END);\n\n  finishAll(props);\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @returns {void}\n */\nfunction finishDelaying(props) {\n  if (props.state !== STATE_DELAYING) {\n    return;\n  }\n\n  props.state = STATE_PLAYING;\n  props.startTime = Date.now();\n  props.isReversing = !props.isOn;\n  fireEvent(props, EVENT_TYPE_START);\n\n  var durationLeft = props.isOn ? props.duration - props.currentPosition : props.currentPosition;\n  if (durationLeft > 0) {\n    props.timer = setTimeout(function () {\n      finishPlaying(props);\n    }, durationLeft);\n  } else {\n    finishPlaying(props);\n  }\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @returns {void}\n */\nfunction abort(props) {\n  clearTimeout(props.timer);\n  if (props.state === STATE_STOPPED) {\n    return;\n  }\n\n  props.state = STATE_STOPPED;\n  fireEvent(props, EVENT_TYPE_CANCEL);\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {boolean} force - Skip transition.\n * @param {Array} args - Arguments that are passed to procToOn.\n * @returns {void}\n */\nfunction _on(props, force, args) {\n  if (props.isOn && props.state === STATE_STOPPED || props.isOn && props.state !== STATE_STOPPED && !force) {\n    return;\n  }\n  /*\n    Cases:\n      - Done `off` or playing to `off`, regardless of `force`\n      - Playing to `on` and `force`\n  */\n\n  if (props.options.procToOn) {\n    args.unshift(!!force);\n    props.options.procToOn.apply(props.ins, args);\n  }\n\n  if (force || !props.isOn && props.state === STATE_DELAYING || -props.delay > props.duration) {\n    // The delay must have not changed before turning over.\n    abort(props);\n    props.isOn = true;\n    finishAll(props);\n  } else {\n    fixCurrentPosition(props);\n    abort(props);\n\n    props.state = STATE_DELAYING;\n    props.isOn = true;\n    props.runTime = Date.now();\n    props.startTime = 0;\n    fireEvent(props, EVENT_TYPE_RUN);\n\n    if (props.delay > 0) {\n      props.timer = setTimeout(function () {\n        finishDelaying(props);\n      }, props.delay);\n    } else {\n      if (props.delay < 0) {\n        // Move the position to the right.\n        props.currentPosition = Math.min(props.currentPosition - props.delay, props.duration);\n      }\n      finishDelaying(props);\n    }\n  }\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {boolean} force - Skip transition.\n * @param {Array} args - Arguments that are passed to procToOff.\n * @returns {void}\n */\nfunction _off(props, force, args) {\n  if (!props.isOn && props.state === STATE_STOPPED || !props.isOn && props.state !== STATE_STOPPED && !force) {\n    return;\n  }\n  /*\n    Cases:\n      - Done `on` or playing to `on`, regardless of `force`\n      - Playing to `off` and `force`\n  */\n\n  if (props.options.procToOff) {\n    args.unshift(!!force);\n    props.options.procToOff.apply(props.ins, args);\n  }\n\n  if (force || props.isOn && props.state === STATE_DELAYING || -props.delay > props.duration) {\n    // The delay must have not changed before turning over.\n    abort(props);\n    props.isOn = false;\n    finishAll(props);\n  } else {\n    fixCurrentPosition(props);\n    abort(props);\n\n    props.state = STATE_DELAYING;\n    props.isOn = false;\n    props.runTime = Date.now();\n    props.startTime = 0;\n    fireEvent(props, EVENT_TYPE_RUN);\n\n    if (props.delay > 0) {\n      props.timer = setTimeout(function () {\n        finishDelaying(props);\n      }, props.delay);\n    } else {\n      if (props.delay < 0) {\n        // Move the position to the left.\n        props.currentPosition = Math.max(props.currentPosition + props.delay, 0);\n      }\n      finishDelaying(props);\n    }\n  }\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {Object} newOptions - New options.\n * @returns {void}\n */\nfunction _setOptions(props, newOptions) {\n  var options = props.options;\n\n  function parseAsCss(option) {\n    var optionValue = typeof newOptions[option] === 'number' // From CSS\n    ? (props.window.getComputedStyle(props.element, '')[CSSPrefix.getName('transition-' + option)] || '').split(',')[newOptions[option]] : newOptions[option];\n    return typeof optionValue === 'string' ? optionValue.trim() : null;\n  }\n\n  // pseudoElement\n  if (typeof newOptions.pseudoElement === 'string') {\n    options.pseudoElement = newOptions.pseudoElement;\n  }\n\n  // property\n  {\n    var value = parseAsCss('property');\n    if (typeof value === 'string' && value !== 'all' && value !== 'none') {\n      options.property = value;\n    }\n  }\n\n  // duration, delay\n  ['duration', 'delay'].forEach(function (option) {\n    var value = parseAsCss(option);\n    if (typeof value === 'string') {\n      var matches = void 0,\n          timeValue = void 0;\n      if (/^[0.]+$/.test(value)) {\n        // This is invalid for CSS.\n        options[option] = '0s';\n        props[option] = 0;\n      } else if ((matches = /^(.+?)(m)?s$/.exec(value)) && isFinite(timeValue = parseFloat(matches[1])) && (option !== 'duration' || timeValue >= 0)) {\n        options[option] = '' + timeValue + (matches[2] || '') + 's';\n        props[option] = timeValue * (matches[2] ? 1 : 1000);\n      }\n    }\n  });\n\n  // procToOn, procToOff\n  ['procToOn', 'procToOff'].forEach(function (option) {\n    if (typeof newOptions[option] === 'function') {\n      options[option] = newOptions[option];\n    } else if (newOptions.hasOwnProperty(option) && newOptions[option] == null) {\n      options[option] = void 0;\n    }\n  });\n}\n\nvar TimedTransition = function () {\n  /**\n   * Create a `TimedTransition` instance.\n   * @param {Element} element - Target element.\n   * @param {Object} [options] - Options.\n   * @param {boolean} [initOn] - Initial `on`.\n   */\n  function TimedTransition(element, options, initOn) {\n    _classCallCheck(this, TimedTransition);\n\n    var props = {\n      ins: this,\n      options: { // Initial options (not default)\n        pseudoElement: '',\n        property: ''\n      },\n      duration: 0,\n      delay: 0,\n      isOn: !!initOn\n    };\n\n    Object.defineProperty(this, '_id', { value: ++insId });\n    props._id = this._id;\n    insProps[this._id] = props;\n\n    if (!element.nodeType || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new Error('This `element` is not accepted.');\n    }\n    props.element = element;\n    if (!options) {\n      options = {};\n    }\n    props.window = element.ownerDocument.defaultView || options.window || window;\n\n    // Default options\n    if (!options.hasOwnProperty('property')) {\n      options.property = 0;\n    }\n    if (!options.hasOwnProperty('duration')) {\n      options.duration = 0;\n    }\n    if (!options.hasOwnProperty('delay')) {\n      options.delay = 0;\n    }\n\n    _setOptions(props, options);\n    finishAll(props);\n  }\n\n  _createClass(TimedTransition, [{\n    key: 'remove',\n    value: function remove() {\n      var props = insProps[this._id];\n      clearTimeout(props.timer);\n      delete insProps[this._id];\n    }\n\n    /**\n     * @param {Object} options - New options.\n     * @returns {TimedTransition} Current instance itself.\n     */\n\n  }, {\n    key: 'setOptions',\n    value: function setOptions(options) {\n      if (options) {\n        _setOptions(insProps[this._id], options);\n      }\n      return this;\n    }\n\n    /**\n     * Set `on`.\n     * @param {boolean} [force] - Set `on` it immediately without transition.\n     * @param {Object} [options] - New options.\n     * @param {...{}} [args] - Arguments that are passed to procToOn.\n     * @returns {TimedTransition} Current instance itself.\n     */\n\n  }, {\n    key: 'on',\n    value: function on(force, options) {\n      if (arguments.length < 2 && typeof force !== 'boolean') {\n        options = force;\n        force = false;\n      }\n\n      this.setOptions(options);\n      _on(insProps[this._id], force, Array.prototype.slice.call(arguments, 2));\n      return this;\n    }\n\n    /**\n     * Set 'off'.\n     * @param {boolean} [force] - Set `off` it immediately without transition.\n     * @param {Object} [options] - New options.\n     * @param {...{}} [args] - Arguments that are passed to procToOff.\n     * @returns {TimedTransition} Current instance itself.\n     */\n\n  }, {\n    key: 'off',\n    value: function off(force, options) {\n      if (arguments.length < 2 && typeof force !== 'boolean') {\n        options = force;\n        force = false;\n      }\n\n      this.setOptions(options);\n      _off(insProps[this._id], force, Array.prototype.slice.call(arguments, 2));\n      return this;\n    }\n  }, {\n    key: 'state',\n    get: function get() {\n      return insProps[this._id].state;\n    }\n  }, {\n    key: 'element',\n    get: function get() {\n      return insProps[this._id].element;\n    }\n  }, {\n    key: 'isReversing',\n    get: function get() {\n      return insProps[this._id].isReversing;\n    }\n  }, {\n    key: 'pseudoElement',\n    get: function get() {\n      return insProps[this._id].options.pseudoElement;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { pseudoElement: value });\n    }\n  }, {\n    key: 'property',\n    get: function get() {\n      return insProps[this._id].options.property;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { property: value });\n    }\n  }, {\n    key: 'duration',\n    get: function get() {\n      return insProps[this._id].options.duration;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { duration: value });\n    }\n  }, {\n    key: 'delay',\n    get: function get() {\n      return insProps[this._id].options.delay;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { delay: value });\n    }\n  }, {\n    key: 'procToOn',\n    get: function get() {\n      return insProps[this._id].options.procToOn;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { procToOn: value });\n    }\n  }, {\n    key: 'procToOff',\n    get: function get() {\n      return insProps[this._id].options.procToOff;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { procToOff: value });\n    }\n  }], [{\n    key: 'STATE_STOPPED',\n    get: function get() {\n      return STATE_STOPPED;\n    }\n  }, {\n    key: 'STATE_DELAYING',\n    get: function get() {\n      return STATE_DELAYING;\n    }\n  }, {\n    key: 'STATE_PLAYING',\n    get: function get() {\n      return STATE_PLAYING;\n    }\n  }]);\n\n  return TimedTransition;\n}();\n\nexport default TimedTransition;","module.exports = \".plainmodal .plainmodal-overlay{-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);box-shadow:0 0 1px rgba(0,0,0,0)}.plainmodal.plainoverlay{background-color:transparent;cursor:auto}.plainmodal .plainmodal-content{z-index:9000}.plainmodal .plainmodal-overlay{width:100%;height:100%;position:absolute;left:0;top:0;background-color:rgba(136,136,136,.6);transition-property:opacity;transition-duration:200ms;transition-timing-function:linear;opacity:1}.plainmodal .plainmodal-overlay.plainmodal-overlay-hide{opacity:0}.plainmodal .plainmodal-overlay.plainmodal-overlay-force{transition-property:none}\";","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * PlainModal\n * https://anseki.github.io/plain-modal/\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nimport CSSPrefix from 'cssprefix';\nimport mClassList from 'm-class-list';\nimport PlainOverlay from 'plain-overlay';\nimport CSS_TEXT from './default.scss';\n// [DRAG]\nimport PlainDraggable from 'plain-draggable';\n// [/DRAG]\nmClassList.ignoreNative = true;\n\nvar APP_ID = 'plainmodal',\n    STYLE_ELEMENT_ID = APP_ID + '-style',\n    STYLE_CLASS = APP_ID,\n    STYLE_CLASS_CONTENT = APP_ID + '-content',\n    STYLE_CLASS_OVERLAY = APP_ID + '-overlay',\n    STYLE_CLASS_OVERLAY_HIDE = STYLE_CLASS_OVERLAY + '-hide',\n    STYLE_CLASS_OVERLAY_FORCE = STYLE_CLASS_OVERLAY + '-force',\n    STATE_CLOSED = 0,\n    STATE_OPENING = 1,\n    STATE_OPENED = 2,\n    STATE_CLOSING = 3,\n    STATE_INACTIVATING = 4,\n    STATE_INACTIVATED = 5,\n    STATE_ACTIVATING = 6,\n    DURATION = 200,\n    // COPY from PlainOverlay\n\nIS_EDGE = '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style && !window.navigator.msPointerEnabled,\n    IS_TRIDENT = !IS_EDGE && !!document.uniqueID,\n    // Future Edge might support `document.uniqueID`.\n\nisObject = function () {\n  var toString = {}.toString,\n      fnToString = {}.hasOwnProperty.toString,\n      objFnString = fnToString.call(Object);\n  return function (obj) {\n    var proto = void 0,\n        constr = void 0;\n    return obj && toString.call(obj) === '[object Object]' && (!(proto = Object.getPrototypeOf(obj)) || (constr = proto.hasOwnProperty('constructor') && proto.constructor) && typeof constr === 'function' && fnToString.call(constr) === objFnString);\n  };\n}(),\n\n\n/**\n * An object that has properties of instance.\n * @typedef {Object} props\n * @property {Element} elmContent - Content element.\n * @property {Element} elmOverlay - Overlay element. (Not PlainOverlay)\n * @property {PlainOverlay} plainOverlay - PlainOverlay instance.\n * @property {PlainDraggable} plainDraggable - PlainDraggable instance.\n * @property {number} state - Current state.\n * @property {Object} options - Options.\n * @property {props} parentProps - props that is effected with current props.\n * @property {{plainOverlay: boolean, option: boolean}} effectFinished - The effect finished.\n */\n\n/** @type {Object.<_id: number, props>} */\ninsProps = {},\n\n\n/**\n * A `props` list, it have a `state` other than `STATE_CLOSED`.\n * A `props` is pushed to the end of this array, `shownProps[shownProps.length - 1]` can be active.\n * @type {Array.<props>}\n */\nshownProps = [];\n\nvar closeByEscKey = true,\n    closeByOverlay = true,\n    insId = 0,\n    openCloseEffectProps = void 0; // A `props` that is running the \"open/close\" effect now.\n\n// [DEBUG]\nvar traceLog = [];\nvar STATE_TEXT = {};\nSTATE_TEXT[STATE_CLOSED] = 'STATE_CLOSED';\nSTATE_TEXT[STATE_OPENING] = 'STATE_OPENING';\nSTATE_TEXT[STATE_OPENED] = 'STATE_OPENED';\nSTATE_TEXT[STATE_CLOSING] = 'STATE_CLOSING';\nSTATE_TEXT[STATE_INACTIVATING] = 'STATE_INACTIVATING';\nSTATE_TEXT[STATE_INACTIVATED] = 'STATE_INACTIVATED';\nSTATE_TEXT[STATE_ACTIVATING] = 'STATE_ACTIVATING';\n// [/DEBUG]\n\nfunction forceReflow(target) {\n  // Trident and Blink bug (reflow like `offsetWidth` can't update)\n  setTimeout(function () {\n    var parent = target.parentNode,\n        next = target.nextSibling;\n    // It has to be removed first for Blink.\n    parent.insertBefore(parent.removeChild(target), next);\n  }, 0);\n}\n\n/**\n * @param {Element} element - A target element.\n * @returns {boolean} `true` if connected element.\n */\nfunction isElement(element) {\n  return !!(element && element.nodeType === Node.ELEMENT_NODE &&\n  // element instanceof HTMLElement &&\n  typeof element.getBoundingClientRect === 'function' && !(element.compareDocumentPosition(document) & Node.DOCUMENT_POSITION_DISCONNECTED));\n}\n\n// [DRAG]\nfunction switchDraggable(props) {\n  // [DEBUG]\n  traceLog.push('<switchDraggable>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  // [/DEBUG]\n  if (props.plainDraggable) {\n    // [DEBUG]\n    traceLog.push('plainDraggable.disabled:' + !(props.options.dragHandle && props.state === STATE_OPENED));\n    // [/DEBUG]\n    var disabled = !(props.options.dragHandle && props.state === STATE_OPENED);\n    props.plainDraggable.disabled = disabled;\n    if (!disabled) {\n      props.plainDraggable.position();\n    }\n    // [DEBUG]\n  } else {\n    traceLog.push('plainDraggable:NONE');\n    // [/DEBUG]\n  }\n  traceLog.push('</switchDraggable>'); // [DEBUG/]\n}\n// [/DRAG]\n\nfunction finishOpening(props) {\n  // [DEBUG]\n  traceLog.push('<finishOpening>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  // [/DEBUG]\n  openCloseEffectProps = null;\n  props.state = STATE_OPENED;\n  traceLog.push('state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  switchDraggable(props); // [DRAG/]\n  if (props.parentProps) {\n    // [DEBUG]\n    traceLog.push('parentProps._id:' + props.parentProps._id, 'parentProps.state:' + STATE_TEXT[props.parentProps.state]);\n    // [/DEBUG]\n    props.parentProps.state = STATE_INACTIVATED;\n    traceLog.push('parentProps.state:' + STATE_TEXT[props.parentProps.state]); // [DEBUG/]\n  }\n  if (props.options.onOpen) {\n    props.options.onOpen.call(props.ins);\n  }\n  traceLog.push('</finishOpening>'); // [DEBUG/]\n}\n\nfunction finishClosing(props) {\n  // [DEBUG]\n  traceLog.push('<finishClosing>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  if (shownProps[shownProps.length - 1] !== props) {\n    throw new Error('`shownProps` is broken.');\n  }\n  // [/DEBUG]\n  shownProps.pop();\n  // [DEBUG]\n  traceLog.push('shownProps:' + (shownProps.length ? shownProps.map(function (props) {\n    return props._id;\n  }).join(',') : 'NONE'));\n  // [/DEBUG]\n  openCloseEffectProps = null;\n  props.state = STATE_CLOSED;\n  traceLog.push('state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  if (props.parentProps) {\n    // [DEBUG]\n    traceLog.push('parentProps._id:' + props.parentProps._id, 'parentProps.state:' + STATE_TEXT[props.parentProps.state]);\n    // [/DEBUG]\n    props.parentProps.state = STATE_OPENED;\n    traceLog.push('parentProps.state:' + STATE_TEXT[props.parentProps.state]); // [DEBUG/]\n    switchDraggable(props.parentProps); // [DRAG/]\n    traceLog.push('parentProps(UNLINK):' + props.parentProps._id); // [DEBUG/]\n    props.parentProps = null;\n  }\n  if (props.options.onClose) {\n    props.options.onClose.call(props.ins);\n  }\n  traceLog.push('</finishClosing>'); // [DEBUG/]\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {string} effectKey - `plainOverlay' or 'option`\n * @returns {void}\n */\nfunction finishOpenEffect(props, effectKey) {\n  // [DEBUG]\n  traceLog.push('<finishOpenEffect>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  traceLog.push('effectKey:' + effectKey);\n  // [/DEBUG]\n  if (props.state !== STATE_OPENING) {\n    traceLog.push('CANCEL', '</finishOpenEffect>'); // [DEBUG/]\n    return;\n  }\n  props.effectFinished[effectKey] = true;\n  // [DEBUG]\n  traceLog.push('effectFinished.plainOverlay:' + props.effectFinished.plainOverlay);\n  traceLog.push('effectFinished.option:' + props.effectFinished.option);\n  traceLog.push('openEffect:' + (props.options.openEffect ? 'YES' : 'NO'));\n  // [/DEBUG]\n  if (props.effectFinished.plainOverlay && (!props.options.openEffect || props.effectFinished.option)) {\n    finishOpening(props);\n  }\n  traceLog.push('_id:' + props._id, '</finishOpenEffect>'); // [DEBUG/]\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {string} effectKey - `plainOverlay' or 'option`\n * @returns {void}\n */\nfunction finishCloseEffect(props, effectKey) {\n  // [DEBUG]\n  traceLog.push('<finishCloseEffect>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  traceLog.push('effectKey:' + effectKey);\n  // [/DEBUG]\n  if (props.state !== STATE_CLOSING) {\n    traceLog.push('CANCEL', '</finishCloseEffect>'); // [DEBUG/]\n    return;\n  }\n  props.effectFinished[effectKey] = true;\n  // [DEBUG]\n  traceLog.push('effectFinished.plainOverlay:' + props.effectFinished.plainOverlay);\n  traceLog.push('effectFinished.option:' + props.effectFinished.option);\n  traceLog.push('closeEffect:' + (props.options.closeEffect ? 'YES' : 'NO'));\n  // [/DEBUG]\n  if (props.effectFinished.plainOverlay && (!props.options.closeEffect || props.effectFinished.option)) {\n    finishClosing(props);\n  }\n  traceLog.push('_id:' + props._id, '</finishCloseEffect>'); // [DEBUG/]\n}\n\n/**\n * Process after preparing data and adjusting style.\n * @param {props} props - `props` of instance.\n * @param {boolean} [force] - Skip effect.\n * @returns {void}\n */\nfunction execOpening(props, force) {\n  // [DEBUG]\n  traceLog.push('<execOpening>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  traceLog.push('force:' + !!force);\n  // [/DEBUG]\n  if (props.parentProps) {\n    // inactivate parentProps\n    // [DEBUG]\n    traceLog.push('parentProps._id:' + props.parentProps._id, 'parentProps.state:' + STATE_TEXT[props.parentProps.state]);\n    // [/DEBUG]\n    /*\n      Cases:\n        - STATE_OPENED or STATE_ACTIVATING, regardless of force\n        - STATE_INACTIVATING and force\n    */\n    var parentProps = props.parentProps,\n        elmOverlay = parentProps.elmOverlay;\n    if (parentProps.state === STATE_OPENED) {\n      elmOverlay.style[CSSPrefix.getName('transitionDuration')] = props.options.duration === DURATION ? '' : props.options.duration + 'ms';\n      // [DEBUG]\n      traceLog.push('elmOverlay.duration:' + (props.options.duration === DURATION ? '' : props.options.duration + 'ms'));\n      // [/DEBUG]\n    }\n    var elmOverlayClassList = mClassList(elmOverlay);\n    elmOverlayClassList.toggle(STYLE_CLASS_OVERLAY_FORCE, !!force);\n    elmOverlayClassList.add(STYLE_CLASS_OVERLAY_HIDE);\n    // [DEBUG]\n    traceLog.push('elmOverlay.CLASS_FORCE:' + elmOverlayClassList.contains(STYLE_CLASS_OVERLAY_FORCE));\n    traceLog.push('elmOverlay.CLASS_HIDE:' + elmOverlayClassList.contains(STYLE_CLASS_OVERLAY_HIDE));\n    // [/DEBUG]\n    // Update `state` regardless of force, for switchDraggable.\n    parentProps.state = STATE_INACTIVATING;\n    parentProps.plainOverlay.blockingDisabled = true;\n    traceLog.push('parentProps.state:' + STATE_TEXT[props.parentProps.state]); // [DEBUG/]\n    switchDraggable(parentProps); // [DRAG/]\n  }\n\n  props.state = STATE_OPENING;\n  props.plainOverlay.blockingDisabled = false;\n  traceLog.push('state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  props.effectFinished.plainOverlay = props.effectFinished.option = false;\n  props.plainOverlay.show(force);\n  if (props.options.openEffect) {\n    if (force) {\n      props.options.openEffect.call(props.ins);\n      finishOpenEffect(props, 'option');\n    } else {\n      props.options.openEffect.call(props.ins, props.openEffectDone);\n    }\n  }\n  traceLog.push('_id:' + props._id, '</execOpening>'); // [DEBUG/]\n}\n\n/**\n * Process after preparing data and adjusting style.\n * @param {props} props - `props` of instance.\n * @param {boolean} [force] - Skip effect.\n * @param {boolean} [sync] - `force` with sync-mode. (Skip restoring active element)\n * @returns {void}\n */\nfunction execClosing(props, force, sync) {\n  // [DEBUG]\n  traceLog.push('<execClosing>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  traceLog.push('force:' + !!force, 'sync:' + !!sync);\n  // [/DEBUG]\n  if (props.parentProps) {\n    // activate parentProps\n    // [DEBUG]\n    traceLog.push('parentProps._id:' + props.parentProps._id, 'parentProps.state:' + STATE_TEXT[props.parentProps.state]);\n    // [/DEBUG]\n    /*\n      Cases:\n        - STATE_INACTIVATED or STATE_INACTIVATING, regardless of `force`\n        - STATE_ACTIVATING and `force`\n    */\n    var parentProps = props.parentProps,\n        elmOverlay = parentProps.elmOverlay;\n    if (parentProps.state === STATE_INACTIVATED) {\n      elmOverlay.style[CSSPrefix.getName('transitionDuration')] = props.options.duration === DURATION ? '' : props.options.duration + 'ms';\n      // [DEBUG]\n      traceLog.push('elmOverlay.duration:' + (props.options.duration === DURATION ? '' : props.options.duration + 'ms'));\n      // [/DEBUG]\n    }\n    var elmOverlayClassList = mClassList(elmOverlay);\n    elmOverlayClassList.toggle(STYLE_CLASS_OVERLAY_FORCE, !!force);\n    elmOverlayClassList.remove(STYLE_CLASS_OVERLAY_HIDE);\n    // [DEBUG]\n    traceLog.push('elmOverlay.CLASS_FORCE:' + elmOverlayClassList.contains(STYLE_CLASS_OVERLAY_FORCE));\n    traceLog.push('elmOverlay.CLASS_HIDE:' + elmOverlayClassList.contains(STYLE_CLASS_OVERLAY_HIDE));\n    // [/DEBUG]\n    // same condition as props\n    parentProps.state = STATE_ACTIVATING;\n    parentProps.plainOverlay.blockingDisabled = false;\n    traceLog.push('parentProps.state:' + STATE_TEXT[props.parentProps.state]); // [DEBUG/]\n  }\n\n  props.state = STATE_CLOSING;\n  traceLog.push('state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  switchDraggable(props); // [DRAG/]\n  props.effectFinished.plainOverlay = props.effectFinished.option = false;\n  props.plainOverlay.hide(force, sync);\n  if (props.options.closeEffect) {\n    if (force) {\n      props.options.closeEffect.call(props.ins);\n      finishCloseEffect(props, 'option');\n    } else {\n      props.options.closeEffect.call(props.ins, props.closeEffectDone);\n    }\n  }\n  traceLog.push('_id:' + props._id, '</execClosing>'); // [DEBUG/]\n}\n\n/**\n * Finish the \"open/close\" effect immediately with sync-mode.\n * @param {props} props - `props` of instance.\n * @returns {void}\n */\nfunction fixOpenClose(props) {\n  // [DEBUG]\n  traceLog.push('<fixOpenClose>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]);\n  // [/DEBUG]\n  if (props.state === STATE_OPENING) {\n    execOpening(props, true);\n  } else if (props.state === STATE_CLOSING) {\n    execClosing(props, true, true);\n  }\n  traceLog.push('_id:' + props._id, '</fixOpenClose>'); // [DEBUG/]\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {boolean} [force] - Skip effect.\n * @returns {void}\n */\nfunction _open(props, force) {\n  traceLog.push('<open>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  if (props.state !== STATE_CLOSED && props.state !== STATE_CLOSING && props.state !== STATE_OPENING || props.state === STATE_OPENING && !force || props.state !== STATE_OPENING && props.options.onBeforeOpen && props.options.onBeforeOpen.call(props.ins) === false) {\n    traceLog.push('CANCEL', '</open>'); // [DEBUG/]\n    return false;\n  }\n  /*\n    Cases:\n      - STATE_CLOSED or STATE_CLOSING, regardless of `force`\n      - STATE_OPENING and `force`\n  */\n\n  // [DEBUG]\n  traceLog.push('openCloseEffectProps:' + (openCloseEffectProps ? openCloseEffectProps._id : 'NONE'));\n  // [/DEBUG]\n  if (props.state === STATE_CLOSED) {\n    if (openCloseEffectProps) {\n      fixOpenClose(openCloseEffectProps);\n    }\n    openCloseEffectProps = props;\n\n    if (shownProps.length) {\n      // [DEBUG]\n      if (shownProps.indexOf(props) !== -1) {\n        throw new Error('`shownProps` is broken.');\n      }\n      // [/DEBUG]\n      props.parentProps = shownProps[shownProps.length - 1];\n      traceLog.push('parentProps(LINK):' + props.parentProps._id); // [DEBUG/]\n    }\n    shownProps.push(props);\n    // [DEBUG]\n    traceLog.push('shownProps:' + (shownProps.length ? shownProps.map(function (props) {\n      return props._id;\n    }).join(',') : 'NONE'));\n    // [/DEBUG]\n\n    mClassList(props.elmOverlay).add(STYLE_CLASS_OVERLAY_FORCE).remove(STYLE_CLASS_OVERLAY_HIDE);\n    // [DEBUG]\n    traceLog.push('elmOverlay.CLASS_FORCE:' + mClassList(props.elmOverlay).contains(STYLE_CLASS_OVERLAY_FORCE));\n    traceLog.push('elmOverlay.CLASS_HIDE:' + mClassList(props.elmOverlay).contains(STYLE_CLASS_OVERLAY_HIDE));\n    // [/DEBUG]\n  }\n\n  execOpening(props, force);\n  traceLog.push('_id:' + props._id, '</open>'); // [DEBUG/]\n  return true;\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {boolean} [force] - Skip effect.\n * @returns {void}\n */\nfunction _close(props, force) {\n  traceLog.push('<close>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n  if (props.state === STATE_CLOSED || props.state === STATE_CLOSING && !force || props.state !== STATE_CLOSING && props.options.onBeforeClose && props.options.onBeforeClose.call(props.ins) === false) {\n    traceLog.push('CANCEL', '</close>'); // [DEBUG/]\n    return false;\n  }\n  /*\n    Cases:\n      - Other than STATE_CLOSED and STATE_CLOSING, regardless of `force`\n      - STATE_CLOSING and `force`\n  */\n\n  // [DEBUG]\n  traceLog.push('openCloseEffectProps:' + (openCloseEffectProps ? openCloseEffectProps._id : 'NONE'));\n  // [/DEBUG]\n  if (openCloseEffectProps && openCloseEffectProps !== props) {\n    fixOpenClose(openCloseEffectProps);\n    openCloseEffectProps = null;\n  }\n  /*\n    Cases:\n      - STATE_OPENED, STATE_OPENING or STATE_INACTIVATED, regardless of `force`\n      - STATE_CLOSING and `force`\n  */\n  if (props.state === STATE_INACTIVATED) {\n    // -> STATE_OPENED\n    // [DEBUG]\n    var i = shownProps.indexOf(props);\n    if (i === -1 || i === shownProps.length - 1) {\n      throw new Error('`shownProps` is broken.');\n    }\n    traceLog.push('shownProps:' + (shownProps.length ? shownProps.map(function (props) {\n      return props._id;\n    }).join(',') : 'NONE'));\n    // [/DEBUG]\n    var topProps = void 0;\n    while ((topProps = shownProps[shownProps.length - 1]) !== props) {\n      // [DEBUG]\n      if (topProps.state !== STATE_OPENED) {\n        throw new Error('`shownProps` is broken.');\n      }\n      traceLog.push('topProps._id:' + topProps._id, 'topProps.state:' + STATE_TEXT[topProps.state]);\n      // [/DEBUG]\n      execClosing(topProps, true, true);\n    }\n  }\n  /*\n    Cases:\n      - STATE_OPENED or STATE_OPENING, regardless of `force`\n      - STATE_CLOSING and `force`\n  */\n\n  if (props.state === STATE_OPENED) {\n    if (openCloseEffectProps) {\n      throw new Error('`openCloseEffectProps` is broken.');\n    } // [DEBUG/]\n    openCloseEffectProps = props;\n  }\n\n  execClosing(props, force);\n  traceLog.push('_id:' + props._id, '</close>'); // [DEBUG/]\n  return true;\n}\n\n/**\n * @param {props} props - `props` of instance.\n * @param {Object} newOptions - New options.\n * @returns {void}\n */\nfunction _setOptions(props, newOptions) {\n  var options = props.options,\n      plainOverlay = props.plainOverlay;\n\n  // closeButton\n  if (newOptions.hasOwnProperty('closeButton') && (newOptions.closeButton = isElement(newOptions.closeButton) ? newOptions.closeButton : newOptions.closeButton == null ? void 0 : false) !== false && newOptions.closeButton !== options.closeButton) {\n    if (options.closeButton) {\n      // Remove\n      options.closeButton.removeEventListener('click', props.handleClose, false);\n    }\n    options.closeButton = newOptions.closeButton;\n    if (options.closeButton) {\n      // Add\n      options.closeButton.addEventListener('click', props.handleClose, false);\n    }\n  }\n\n  // duration\n  // Check by PlainOverlay\n  plainOverlay.duration = newOptions.duration;\n  options.duration = plainOverlay.duration;\n\n  // overlayBlur\n  // Check by PlainOverlay\n  plainOverlay.blur = newOptions.overlayBlur;\n  options.overlayBlur = plainOverlay.blur;\n\n  // [DRAG]\n  // dragHandle\n  if (newOptions.hasOwnProperty('dragHandle') && (newOptions.dragHandle = isElement(newOptions.dragHandle) ? newOptions.dragHandle : newOptions.dragHandle == null ? void 0 : false) !== false && newOptions.dragHandle !== options.dragHandle) {\n    options.dragHandle = newOptions.dragHandle;\n    if (options.dragHandle) {\n      if (!props.plainDraggable) {\n        props.plainDraggable = new PlainDraggable(props.elmContent);\n      }\n      props.plainDraggable.handle = options.dragHandle;\n    }\n    switchDraggable(props);\n  }\n  // [/DRAG]\n\n  // effect functions and event listeners\n  ['openEffect', 'closeEffect', 'onOpen', 'onClose', 'onBeforeOpen', 'onBeforeClose'].forEach(function (option) {\n    if (typeof newOptions[option] === 'function') {\n      options[option] = newOptions[option];\n    } else if (newOptions.hasOwnProperty(option) && newOptions[option] == null) {\n      options[option] = void 0;\n    }\n  });\n}\n\nvar PlainModal = function () {\n  /**\n   * Create a `PlainModal` instance.\n   * @param {Element} content - An element that is shown as the content of the modal window.\n   * @param {Object} [options] - Options.\n   */\n  function PlainModal(content, options) {\n    _classCallCheck(this, PlainModal);\n\n    var props = {\n      ins: this,\n      options: { // Initial options (not default)\n        closeButton: void 0,\n        duration: DURATION,\n        dragHandle: void 0, // [DRAG/]\n        overlayBlur: false\n      },\n      state: STATE_CLOSED,\n      effectFinished: { plainOverlay: false, option: false }\n    };\n\n    Object.defineProperty(this, '_id', { value: ++insId });\n    props._id = this._id;\n    insProps[this._id] = props;\n\n    if (!content.nodeType || content.nodeType !== Node.ELEMENT_NODE || content.ownerDocument.defaultView !== window) {\n      throw new Error('This `content` is not accepted.');\n    }\n    props.elmContent = content;\n    if (!options) {\n      options = {};\n    } else if (!isObject(options)) {\n      throw new Error('Invalid options.');\n    }\n\n    // Setup window\n    if (!document.getElementById(STYLE_ELEMENT_ID)) {\n      var head = document.getElementsByTagName('head')[0] || document.documentElement,\n          sheet = head.insertBefore(document.createElement('style'), head.firstChild);\n      sheet.type = 'text/css';\n      sheet.id = STYLE_ELEMENT_ID;\n      sheet.textContent = CSS_TEXT;\n      if (IS_TRIDENT || IS_EDGE) {\n        forceReflow(sheet);\n      } // Trident bug\n\n      // for closeByEscKey\n      window.addEventListener('keydown', function (event) {\n        var key = void 0,\n            topProps = void 0;\n        if (closeByEscKey && ((key = event.key.toLowerCase()) === 'escape' || key === 'esc') && (topProps = shownProps.length && shownProps[shownProps.length - 1]) && (traceLog.push('<keydown/>', 'CLOSE', '_id:' + topProps._id), true) && // [DEBUG/]\n        _close(topProps)) {\n          event.preventDefault();\n          event.stopImmediatePropagation(); // preventDefault stops other listeners, maybe.\n          event.stopPropagation();\n        }\n      }, true);\n    }\n\n    mClassList(content).add(STYLE_CLASS_CONTENT);\n    // Overlay\n    props.plainOverlay = new PlainOverlay({\n      face: content,\n      onShow: function onShow() {\n        finishOpenEffect(props, 'plainOverlay');\n      },\n      onHide: function onHide() {\n        finishCloseEffect(props, 'plainOverlay');\n      }\n    });\n    // The `content` is now contained into PlainOverlay, and update `display`.\n    if (window.getComputedStyle(content, '').display === 'none') {\n      content.style.display = 'block';\n    }\n    // Trident can not get parent of SVG by parentElement.\n    var elmPlainOverlayBody = content.parentNode; // elmOverlayBody of PlainOverlay\n    mClassList(elmPlainOverlayBody.parentNode).add(STYLE_CLASS); // elmOverlay of PlainOverlay\n\n    // elmOverlay (own overlay)\n    var elmOverlay = props.elmOverlay = elmPlainOverlayBody.appendChild(document.createElement('div'));\n    elmOverlay.className = STYLE_CLASS_OVERLAY;\n    // for closeByOverlay\n    elmOverlay.addEventListener('click', function (event) {\n      if (event.target === elmOverlay && closeByOverlay) {\n        traceLog.push('<overlayClick/>', 'CLOSE', '_id:' + props._id); // [DEBUG/]\n        _close(props);\n      }\n    }, true);\n\n    // Prepare removable event listeners for each instance.\n    props.handleClose = function () {\n      _close(props);\n    };\n    // Callback functions for additional effects, prepare these to allow to be used as listener.\n    props.openEffectDone = function () {\n      finishOpenEffect(props, 'option');\n    };\n    props.closeEffectDone = function () {\n      finishCloseEffect(props, 'option');\n    };\n    props.effectDone = function () {\n      traceLog.push('<effectDone/>', '_id:' + props._id, 'state:' + STATE_TEXT[props.state]); // [DEBUG/]\n      if (props.state === STATE_OPENING) {\n        finishOpenEffect(props, 'option');\n      } else if (props.state === STATE_CLOSING) {\n        finishCloseEffect(props, 'option');\n      }\n    };\n\n    _setOptions(props, options);\n  }\n\n  /**\n   * @param {Object} options - New options.\n   * @returns {PlainModal} Current instance itself.\n   */\n\n\n  _createClass(PlainModal, [{\n    key: 'setOptions',\n    value: function setOptions(options) {\n      if (isObject(options)) {\n        _setOptions(insProps[this._id], options);\n      }\n      return this;\n    }\n\n    /**\n     * Open the modal window.\n     * @param {boolean} [force] - Show it immediately without effect.\n     * @param {Object} [options] - New options.\n     * @returns {PlainModal} Current instance itself.\n     */\n\n  }, {\n    key: 'open',\n    value: function open(force, options) {\n      if (arguments.length < 2 && typeof force !== 'boolean') {\n        options = force;\n        force = false;\n      }\n\n      this.setOptions(options);\n      _open(insProps[this._id], force);\n      return this;\n    }\n\n    /**\n     * Close the modal window.\n     * @param {boolean} [force] - Close it immediately without effect.\n     * @returns {PlainModal} Current instance itself.\n     */\n\n  }, {\n    key: 'close',\n    value: function close(force) {\n      _close(insProps[this._id], force);\n      return this;\n    }\n  }, {\n    key: 'state',\n    get: function get() {\n      return insProps[this._id].state;\n    }\n  }, {\n    key: 'closeButton',\n    get: function get() {\n      return insProps[this._id].options.closeButton;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { closeButton: value });\n    }\n  }, {\n    key: 'duration',\n    get: function get() {\n      return insProps[this._id].options.duration;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { duration: value });\n    }\n  }, {\n    key: 'overlayBlur',\n    get: function get() {\n      return insProps[this._id].options.overlayBlur;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { overlayBlur: value });\n    }\n\n    // [DRAG]\n\n  }, {\n    key: 'dragHandle',\n    get: function get() {\n      return insProps[this._id].options.dragHandle;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { dragHandle: value });\n    }\n    // [/DRAG]\n\n  }, {\n    key: 'openEffect',\n    get: function get() {\n      return insProps[this._id].options.openEffect;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { openEffect: value });\n    }\n  }, {\n    key: 'closeEffect',\n    get: function get() {\n      return insProps[this._id].options.closeEffect;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { closeEffect: value });\n    }\n  }, {\n    key: 'effectDone',\n    get: function get() {\n      return insProps[this._id].effectDone;\n    }\n  }, {\n    key: 'onOpen',\n    get: function get() {\n      return insProps[this._id].options.onOpen;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onOpen: value });\n    }\n  }, {\n    key: 'onClose',\n    get: function get() {\n      return insProps[this._id].options.onClose;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onClose: value });\n    }\n  }, {\n    key: 'onBeforeOpen',\n    get: function get() {\n      return insProps[this._id].options.onBeforeOpen;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onBeforeOpen: value });\n    }\n  }, {\n    key: 'onBeforeClose',\n    get: function get() {\n      return insProps[this._id].options.onBeforeClose;\n    },\n    set: function set(value) {\n      _setOptions(insProps[this._id], { onBeforeClose: value });\n    }\n  }], [{\n    key: 'closeByEscKey',\n    get: function get() {\n      return closeByEscKey;\n    },\n    set: function set(value) {\n      if (typeof value === 'boolean') {\n        closeByEscKey = value;\n      }\n    }\n  }, {\n    key: 'closeByOverlay',\n    get: function get() {\n      return closeByOverlay;\n    },\n    set: function set(value) {\n      if (typeof value === 'boolean') {\n        closeByOverlay = value;\n      }\n    }\n  }, {\n    key: 'STATE_CLOSED',\n    get: function get() {\n      return STATE_CLOSED;\n    }\n  }, {\n    key: 'STATE_OPENING',\n    get: function get() {\n      return STATE_OPENING;\n    }\n  }, {\n    key: 'STATE_OPENED',\n    get: function get() {\n      return STATE_OPENED;\n    }\n  }, {\n    key: 'STATE_CLOSING',\n    get: function get() {\n      return STATE_CLOSING;\n    }\n  }, {\n    key: 'STATE_INACTIVATING',\n    get: function get() {\n      return STATE_INACTIVATING;\n    }\n  }, {\n    key: 'STATE_INACTIVATED',\n    get: function get() {\n      return STATE_INACTIVATED;\n    }\n  }, {\n    key: 'STATE_ACTIVATING',\n    get: function get() {\n      return STATE_ACTIVATING;\n    }\n  }]);\n\n  return PlainModal;\n}();\n\n/* [DRAG/]\nPlainModal.limit = true;\n[DRAG/] */\n\n// [DEBUG]\n\n\nPlainModal.insProps = insProps;\nPlainModal.traceLog = traceLog;\nPlainModal.shownProps = shownProps;\nPlainModal.STATE_TEXT = STATE_TEXT;\nPlainModal.IS_TRIDENT = IS_TRIDENT;\nPlainModal.IS_EDGE = IS_EDGE;\nwindow.PlainOverlay = PlainOverlay;\n// [/DEBUG]\n\nexport default PlainModal;"],"sourceRoot":""}